// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_36d6380ba0019ad9"

version 86 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9508
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x10
        int:12 weaponindex;
        // offset 0x94e8, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:12 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2310
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1a40
        hash_768aeb6b928320d outfit_breadcrumbs[35];
        // offset 0x1a50, size 0x8c0
        hash_32aeae7311d2cd9b hash_e5c77948998e49[35];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x43288
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x3d5c0
        character characters[28];
        // offset 0x41980, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x421f0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x42d80, size 0x500
        string(16) customclassname[10];
        // offset 0x43280, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x43281, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x43282, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x43283, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x27060
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x25410
        character characters[17];
        // offset 0x25498, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x26818, size 0x800
        string(16) customclassname[16];
        // offset 0x27018, size 0x10
        uint:10 killstreak1;
        // offset 0x27028, size 0x10
        uint:10 killstreak2;
        // offset 0x27038, size 0x10
        uint:10 killstreak3;
        // offset 0x27048, size 0x10
        uint:10 killstreak4;
        // offset 0x27058, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x27059, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2705a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2705b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0xa3d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8c40
        character characters[4];
        // offset 0x8cc8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x9bc8, size 0x800
        string(16) customclassname[16];
        // offset 0xa3c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0xa3c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0xa3ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0xa3cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool hash_33bc6781006ae83d;
        // offset 0xe8c4, size 0x1
        bool allowmapscripting;
        // offset 0xe8c5, size 0x1
        bool robotshield;
        // offset 0xe8c6, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c7, size 0x1
        bool allowkillcam;
        // offset 0xe8c8, size 0x1
        bool disableattachments;
        // offset 0xe8c9, size 0x1
        bool disablecompass;
        // offset 0xe8ca, size 0x1
        bool disableweapondrop;
        // offset 0xe8cb, size 0x1
        bool escalationenabled;
        // offset 0xe8cc, size 0x1
        bool disablecac;
        // offset 0xe8cd, size 0x1
        bool disableclassselection;
        // offset 0xe8ce, size 0x1
        bool autoteambalance;
        // offset 0xe8cf, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8d0, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d1, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d2, size 0x1
        bool allowprone;
        // offset 0xe8d3, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d4, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d5, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d6, size 0x1
        bool multibomb;
        // offset 0xe8d7, size 0x1
        bool deathcircle;
        // offset 0xe8d8, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d9, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8da, size 0x1
        bool deathpointloss;
        // offset 0xe8db, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8dc, size 0x1
        bool rebootplayers;
        // offset 0xe8dd, size 0x1
        bool oldschoolmode;
        // offset 0xe8de, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8df, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8e0, size 0x1
        bool allowspectating;
        // offset 0xe8e1, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e2, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e3, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e4, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e5, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e6, size 0x1
        bool disallowprone;
        // offset 0xe8e7, size 0x1
        bool moveplayers;
        // offset 0xe8e8, size 0x1
        bool disabletacinsert;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8ea, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8eb, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8ec, size 0x1
        bool zmdifficulty;
        // offset 0xe8ed, size 0x1
        bool pvponly;
        // offset 0xe8ee, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ef, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8f0, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f1, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f2, size 0x1
        bool classicmode;
        // offset 0xe8f3, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f4, size 0x1
        bool capdecay;
        // offset 0xe8f5, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f6, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f7, size 0x1
        bool hash_201c1769d32b30d3;
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_ea10e4a43069f264"

version 85 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9508
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x10
        int:12 weaponindex;
        // offset 0x94e8, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:12 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2310
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1a40
        hash_768aeb6b928320d outfit_breadcrumbs[35];
        // offset 0x1a50, size 0x8c0
        hash_32aeae7311d2cd9b hash_e5c77948998e49[35];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x3a648
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x34980
        character characters[24];
        // offset 0x38d40, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x395b0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x3a140, size 0x500
        string(16) customclassname[10];
        // offset 0x3a640, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x3a641, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x3a642, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x3a643, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x27060
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x25410
        character characters[17];
        // offset 0x25498, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x26818, size 0x800
        string(16) customclassname[16];
        // offset 0x27018, size 0x10
        uint:10 killstreak1;
        // offset 0x27028, size 0x10
        uint:10 killstreak2;
        // offset 0x27038, size 0x10
        uint:10 killstreak3;
        // offset 0x27048, size 0x10
        uint:10 killstreak4;
        // offset 0x27058, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x27059, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2705a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2705b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0xa3d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8c40
        character characters[4];
        // offset 0x8cc8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x9bc8, size 0x800
        string(16) customclassname[16];
        // offset 0xa3c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0xa3c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0xa3ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0xa3cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool hash_33bc6781006ae83d;
        // offset 0xe8c4, size 0x1
        bool allowmapscripting;
        // offset 0xe8c5, size 0x1
        bool robotshield;
        // offset 0xe8c6, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c7, size 0x1
        bool allowkillcam;
        // offset 0xe8c8, size 0x1
        bool disableattachments;
        // offset 0xe8c9, size 0x1
        bool disablecompass;
        // offset 0xe8ca, size 0x1
        bool disableweapondrop;
        // offset 0xe8cb, size 0x1
        bool escalationenabled;
        // offset 0xe8cc, size 0x1
        bool disablecac;
        // offset 0xe8cd, size 0x1
        bool disableclassselection;
        // offset 0xe8ce, size 0x1
        bool autoteambalance;
        // offset 0xe8cf, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8d0, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d1, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d2, size 0x1
        bool allowprone;
        // offset 0xe8d3, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d4, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d5, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d6, size 0x1
        bool multibomb;
        // offset 0xe8d7, size 0x1
        bool deathcircle;
        // offset 0xe8d8, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d9, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8da, size 0x1
        bool deathpointloss;
        // offset 0xe8db, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8dc, size 0x1
        bool rebootplayers;
        // offset 0xe8dd, size 0x1
        bool oldschoolmode;
        // offset 0xe8de, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8df, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8e0, size 0x1
        bool allowspectating;
        // offset 0xe8e1, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e2, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e3, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e4, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e5, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e6, size 0x1
        bool disallowprone;
        // offset 0xe8e7, size 0x1
        bool moveplayers;
        // offset 0xe8e8, size 0x1
        bool disabletacinsert;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8ea, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8eb, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8ec, size 0x1
        bool zmdifficulty;
        // offset 0xe8ed, size 0x1
        bool pvponly;
        // offset 0xe8ee, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ef, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8f0, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f1, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f2, size 0x1
        bool classicmode;
        // offset 0xe8f3, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f4, size 0x1
        bool capdecay;
        // offset 0xe8f5, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f6, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f7, size 0x1
        bool hash_201c1769d32b30d3;
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_35e41bd338827750"

version 84 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9508
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x10
        int:12 weaponindex;
        // offset 0x94e8, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:12 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x23d60
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x22110
        character characters[17];
        // offset 0x22198, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x23518, size 0x800
        string(16) customclassname[16];
        // offset 0x23d18, size 0x10
        uint:10 killstreak1;
        // offset 0x23d28, size 0x10
        uint:10 killstreak2;
        // offset 0x23d38, size 0x10
        uint:10 killstreak3;
        // offset 0x23d48, size 0x10
        uint:10 killstreak4;
        // offset 0x23d58, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x23d59, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x23d5a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x23d5b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool hash_33bc6781006ae83d;
        // offset 0xe8c4, size 0x1
        bool allowmapscripting;
        // offset 0xe8c5, size 0x1
        bool robotshield;
        // offset 0xe8c6, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c7, size 0x1
        bool allowkillcam;
        // offset 0xe8c8, size 0x1
        bool disableattachments;
        // offset 0xe8c9, size 0x1
        bool disablecompass;
        // offset 0xe8ca, size 0x1
        bool disableweapondrop;
        // offset 0xe8cb, size 0x1
        bool escalationenabled;
        // offset 0xe8cc, size 0x1
        bool disablecac;
        // offset 0xe8cd, size 0x1
        bool disableclassselection;
        // offset 0xe8ce, size 0x1
        bool autoteambalance;
        // offset 0xe8cf, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8d0, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d1, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d2, size 0x1
        bool allowprone;
        // offset 0xe8d3, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d4, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d5, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d6, size 0x1
        bool multibomb;
        // offset 0xe8d7, size 0x1
        bool deathcircle;
        // offset 0xe8d8, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d9, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8da, size 0x1
        bool deathpointloss;
        // offset 0xe8db, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8dc, size 0x1
        bool rebootplayers;
        // offset 0xe8dd, size 0x1
        bool oldschoolmode;
        // offset 0xe8de, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8df, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8e0, size 0x1
        bool allowspectating;
        // offset 0xe8e1, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e2, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e3, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e4, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e5, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e6, size 0x1
        bool disallowprone;
        // offset 0xe8e7, size 0x1
        bool moveplayers;
        // offset 0xe8e8, size 0x1
        bool disabletacinsert;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8ea, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8eb, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8ec, size 0x1
        bool zmdifficulty;
        // offset 0xe8ed, size 0x1
        bool pvponly;
        // offset 0xe8ee, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ef, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8f0, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f1, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f2, size 0x1
        bool classicmode;
        // offset 0xe8f3, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f4, size 0x1
        bool capdecay;
        // offset 0xe8f5, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f6, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f7, size 0x1
        bool hash_201c1769d32b30d3;
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_6f45182684d596d8"

version 83 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9508
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x10
        int:12 weaponindex;
        // offset 0x94e8, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x23d60
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x22110
        character characters[17];
        // offset 0x22198, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x23518, size 0x800
        string(16) customclassname[16];
        // offset 0x23d18, size 0x10
        uint:10 killstreak1;
        // offset 0x23d28, size 0x10
        uint:10 killstreak2;
        // offset 0x23d38, size 0x10
        uint:10 killstreak3;
        // offset 0x23d48, size 0x10
        uint:10 killstreak4;
        // offset 0x23d58, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x23d59, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x23d5a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x23d5b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool hash_33bc6781006ae83d;
        // offset 0xe8c4, size 0x1
        bool allowmapscripting;
        // offset 0xe8c5, size 0x1
        bool robotshield;
        // offset 0xe8c6, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c7, size 0x1
        bool allowkillcam;
        // offset 0xe8c8, size 0x1
        bool disableattachments;
        // offset 0xe8c9, size 0x1
        bool disablecompass;
        // offset 0xe8ca, size 0x1
        bool disableweapondrop;
        // offset 0xe8cb, size 0x1
        bool escalationenabled;
        // offset 0xe8cc, size 0x1
        bool disablecac;
        // offset 0xe8cd, size 0x1
        bool disableclassselection;
        // offset 0xe8ce, size 0x1
        bool autoteambalance;
        // offset 0xe8cf, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8d0, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d1, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d2, size 0x1
        bool allowprone;
        // offset 0xe8d3, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d4, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d5, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d6, size 0x1
        bool multibomb;
        // offset 0xe8d7, size 0x1
        bool deathcircle;
        // offset 0xe8d8, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d9, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8da, size 0x1
        bool deathpointloss;
        // offset 0xe8db, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8dc, size 0x1
        bool rebootplayers;
        // offset 0xe8dd, size 0x1
        bool oldschoolmode;
        // offset 0xe8de, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8df, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8e0, size 0x1
        bool allowspectating;
        // offset 0xe8e1, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e2, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e3, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e4, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e5, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e6, size 0x1
        bool disallowprone;
        // offset 0xe8e7, size 0x1
        bool moveplayers;
        // offset 0xe8e8, size 0x1
        bool disabletacinsert;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8ea, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8eb, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8ec, size 0x1
        bool zmdifficulty;
        // offset 0xe8ed, size 0x1
        bool pvponly;
        // offset 0xe8ee, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ef, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8f0, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f1, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f2, size 0x1
        bool classicmode;
        // offset 0xe8f3, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f4, size 0x1
        bool capdecay;
        // offset 0xe8f5, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f6, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f7, size 0x1
        bool hash_201c1769d32b30d3;
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_5a75718f221d61db"

version 82 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9508
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x10
        int:12 weaponindex;
        // offset 0x94e8, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x23d60
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x22110
        character characters[17];
        // offset 0x22198, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x23518, size 0x800
        string(16) customclassname[16];
        // offset 0x23d18, size 0x10
        uint:10 killstreak1;
        // offset 0x23d28, size 0x10
        uint:10 killstreak2;
        // offset 0x23d38, size 0x10
        uint:10 killstreak3;
        // offset 0x23d48, size 0x10
        uint:10 killstreak4;
        // offset 0x23d58, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x23d59, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x23d5a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x23d5b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_8f7e1b3446631111"

version 81 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x23d60
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x22110
        character characters[17];
        // offset 0x22198, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x23518, size 0x800
        string(16) customclassname[16];
        // offset 0x23d18, size 0x10
        uint:10 killstreak1;
        // offset 0x23d28, size 0x10
        uint:10 killstreak2;
        // offset 0x23d38, size 0x10
        uint:10 killstreak3;
        // offset 0x23d48, size 0x10
        uint:10 killstreak4;
        // offset 0x23d58, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x23d59, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x23d5a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x23d5b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_be8b1bd095a094c6"

version 80 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x21d50
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x20100
        character characters[16];
        // offset 0x20188, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x21508, size 0x800
        string(16) customclassname[16];
        // offset 0x21d08, size 0x10
        uint:10 killstreak1;
        // offset 0x21d18, size 0x10
        uint:10 killstreak2;
        // offset 0x21d28, size 0x10
        uint:10 killstreak3;
        // offset 0x21d38, size 0x10
        uint:10 killstreak4;
        // offset 0x21d48, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x21d49, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x21d4a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x21d4b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_d2c4ce12c4a67a66"

version 79 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:8 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x21d50
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x20100
        character characters[16];
        // offset 0x20188, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x21508, size 0x800
        string(16) customclassname[16];
        // offset 0x21d08, size 0x10
        uint:10 killstreak1;
        // offset 0x21d18, size 0x10
        uint:10 killstreak2;
        // offset 0x21d28, size 0x10
        uint:10 killstreak3;
        // offset 0x21d38, size 0x10
        uint:10 killstreak4;
        // offset 0x21d48, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x21d49, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x21d4a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x21d4b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_33579f146c833fc5"

version 78 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x2010
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x8
        uint:6 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x1810, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:6 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x35e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x30180
        character characters[24];
        // offset 0x34540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x34db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x35940, size 0x500
        string(16) customclassname[10];
        // offset 0x35e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x35e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x35e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x35e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x21d50
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x20100
        character characters[16];
        // offset 0x20188, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x21508, size 0x800
        string(16) customclassname[16];
        // offset 0x21d08, size 0x10
        uint:10 killstreak1;
        // offset 0x21d18, size 0x10
        uint:10 killstreak2;
        // offset 0x21d28, size 0x10
        uint:10 killstreak3;
        // offset 0x21d38, size 0x10
        uint:10 killstreak4;
        // offset 0x21d48, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x21d49, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x21d4a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x21d4b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x97d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x8040
        character characters[4];
        // offset 0x80c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x8fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x97c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x97c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x97ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x97cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_c8187c4daf522316"

version 77 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1810
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x1210, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x29e48
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x24180
        character characters[24];
        // offset 0x28540, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x28db0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x29940, size 0x500
        string(16) customclassname[10];
        // offset 0x29e40, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x29e41, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x29e42, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x29e43, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x19d50
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18100
        character characters[16];
        // offset 0x18188, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x19508, size 0x800
        string(16) customclassname[16];
        // offset 0x19d08, size 0x10
        uint:10 killstreak1;
        // offset 0x19d18, size 0x10
        uint:10 killstreak2;
        // offset 0x19d28, size 0x10
        uint:10 killstreak3;
        // offset 0x19d38, size 0x10
        uint:10 killstreak4;
        // offset 0x19d48, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x19d49, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x19d4a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x19d4b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x77d0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6040
        character characters[4];
        // offset 0x60c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x6fc8, size 0x800
        string(16) customclassname[16];
        // offset 0x77c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x77c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x77ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x77cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_92e8805ee53b36db"

version 76 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 5 size 0x1840
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x1240, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x2a2c8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x24600
        character characters[24];
        // offset 0x289c0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x29230, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x29dc0, size 0x500
        string(16) customclassname[10];
        // offset 0x2a2c0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x2a2c1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2a2c2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2a2c3, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x1a050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18400
        character characters[16];
        // offset 0x18488, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x19808, size 0x800
        string(16) customclassname[16];
        // offset 0x1a008, size 0x10
        uint:10 killstreak1;
        // offset 0x1a018, size 0x10
        uint:10 killstreak2;
        // offset 0x1a028, size 0x10
        uint:10 killstreak3;
        // offset 0x1a038, size 0x10
        uint:10 killstreak4;
        // offset 0x1a048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1a049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1a04a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1a04b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x7890
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6100
        character characters[4];
        // offset 0x6188, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x7088, size 0x800
        string(16) customclassname[16];
        // offset 0x7888, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x7889, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x788a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x788b, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_721dd9eac58eeb66"

version 75 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x18d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x12d0, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x2b048
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x25380
        character characters[24];
        // offset 0x29740, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x29fb0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x2ab40, size 0x500
        string(16) customclassname[10];
        // offset 0x2b040, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x2b041, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2b042, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2b043, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x1a950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18d00
        character characters[16];
        // offset 0x18d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x1a108, size 0x800
        string(16) customclassname[16];
        // offset 0x1a908, size 0x10
        uint:10 killstreak1;
        // offset 0x1a918, size 0x10
        uint:10 killstreak2;
        // offset 0x1a928, size 0x10
        uint:10 killstreak3;
        // offset 0x1a938, size 0x10
        uint:10 killstreak4;
        // offset 0x1a948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1a949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1a94a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1a94b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x7ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6340
        character characters[4];
        // offset 0x63c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x72c8, size 0x800
        string(16) customclassname[16];
        // offset 0x7ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x7ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x7aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x7acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_f9e35020cf6cfa04"

version 74 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 11 size 0x158
    struct variant {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x20
        uint createtime;
        // offset 0x28, size 0x8
        int:8 paintjobslot;
        // offset 0x30, size 0x10
        int:11 variantindex;
        // offset 0x40, size 0x40
        int:8 attachment[8];
        // offset 0x80, size 0x80
        string(16) variantname;
        // offset 0x100, size 0x8
        int:2 readonly;
        // offset 0x108, size 0x10
        int:11 reticleindex;
        // offset 0x118, size 0x10
        int:11 weaponindex;
        // offset 0x128, size 0x10
        uint:9 camoindex;
        // offset 0x138, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x18d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x12d0, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x2b048
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4330
        variant variant[50];
        // offset 0x4348, size 0x58
        charactercontext charactercontext;
        // offset 0x43a0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x43c0, size 0x25380
        character characters[24];
        // offset 0x29740, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x29fb0, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x2ab40, size 0x500
        string(16) customclassname[10];
        // offset 0x2b040, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x2b041, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2b042, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2b043, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x1a950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18d00
        character characters[16];
        // offset 0x18d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x1a108, size 0x800
        string(16) customclassname[16];
        // offset 0x1a908, size 0x10
        uint:10 killstreak1;
        // offset 0x1a918, size 0x10
        uint:10 killstreak2;
        // offset 0x1a928, size 0x10
        uint:10 killstreak3;
        // offset 0x1a938, size 0x10
        uint:10 killstreak4;
        // offset 0x1a948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1a949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1a94a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1a94b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x7ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6340
        character characters[4];
        // offset 0x63c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x72c8, size 0x800
        string(16) customclassname[16];
        // offset 0x7ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x7ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x7aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x7acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_526b5fe5725d4ab"

version 73 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x18d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x12d0, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x2ad28
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x25380
        character characters[24];
        // offset 0x29420, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x29c90, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x2a820, size 0x500
        string(16) customclassname[10];
        // offset 0x2ad20, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x2ad21, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2ad22, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2ad23, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x1a950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18d00
        character characters[16];
        // offset 0x18d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x1a108, size 0x800
        string(16) customclassname[16];
        // offset 0x1a908, size 0x10
        uint:10 killstreak1;
        // offset 0x1a918, size 0x10
        uint:10 killstreak2;
        // offset 0x1a928, size 0x10
        uint:10 killstreak3;
        // offset 0x1a938, size 0x10
        uint:10 killstreak4;
        // offset 0x1a948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1a949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1a94a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1a94b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x7ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6340
        character characters[4];
        // offset 0x63c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x72c8, size 0x800
        string(16) customclassname[16];
        // offset 0x7ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x7ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x7aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x7acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe8f8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:3 platooncount;
        // offset 0xb1b8, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1c0, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c8, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1d0, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d8, size 0x8
        uint:7 playernumlives;
        // offset 0xb1e0, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e8, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1f0, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f8, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb200, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb208, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb210, size 0x8
        uint:6 reboottime;
        // offset 0xb218, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb220, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb228, size 0x8
        uint:4 pickuptime;
        // offset 0xb230, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb250, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb258, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb260, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb268, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb270, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb278, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb288, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb290, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb298, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb2a0, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a8, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2b0, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b8, size 0x8
        uint:4 roundswitch;
        // offset 0xb2c0, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c8, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2d0, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d8, size 0x8
        uint:5 weaponcount;
        // offset 0xb2e0, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e8, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f8, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb300, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f8, size 0x8
        uint:7 drafttime;
        // offset 0xe800, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe808, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe810, size 0x8
        uint:4 throwscore;
        // offset 0xe818, size 0x8
        uint:4 deposittime;
        // offset 0xe820, size 0x10
        fixed<10,2> extratime;
        // offset 0xe830, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe838, size 0x8
        uint:4 teamcount;
        // offset 0xe840, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe860, size 0x8
        uint:4 roundlimit;
        // offset 0xe868, size 0x8
        uint:2 charactercustomization;
        // offset 0xe870, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe878, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe880, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe890, size 0x1
        bool delayplayer;
        // offset 0xe891, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe892, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe893, size 0x1
        bool magic;
        // offset 0xe894, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe895, size 0x1
        bool draftenabled;
        // offset 0xe896, size 0x1
        bool droppedtagrespawn;
        // offset 0xe897, size 0x1
        bool voipkillershearvictim;
        // offset 0xe898, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe899, size 0x1
        bool deathcirclerespawn;
        // offset 0xe89a, size 0x1
        bool allowdogs;
        // offset 0xe89b, size 0x1
        bool presetclassesperteam;
        // offset 0xe89c, size 0x1
        bool hardcoremode;
        // offset 0xe89d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe89e, size 0x1
        bool silentplant;
        // offset 0xe89f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe8a0, size 0x1
        bool drafteveryround;
        // offset 0xe8a1, size 0x1
        bool timepauseswheninzone;
        // offset 0xe8a2, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe8a3, size 0x1
        bool scoreperplayer;
        // offset 0xe8a4, size 0x1
        bool kothmode;
        // offset 0xe8a5, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe8a6, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe8a7, size 0x1
        bool decayprogress;
        // offset 0xe8a8, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a9, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8aa, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8ab, size 0x1
        bool usespawngroups;
        // offset 0xe8ac, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8ad, size 0x1
        bool platoonassignment;
        // offset 0xe8ae, size 0x1
        bool allowbattlechatter;
        // offset 0xe8af, size 0x1
        bool fowrevealenabled;
        // offset 0xe8b0, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8b1, size 0x1
        bool headshotsonly;
        // offset 0xe8b2, size 0x1
        bool disablecontracts;
        // offset 0xe8b3, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8b4, size 0x1
        bool allowannouncer;
        // offset 0xe8b5, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8b6, size 0x1
        bool vehiclesenabled;
        // offset 0xe8b7, size 0x1
        bool decaycapturedzones;
        // offset 0xe8b8, size 0x1
        bool neutralzone;
        // offset 0xe8b9, size 0x1
        bool onlyheadshots;
        // offset 0xe8ba, size 0x1
        bool flagcapturecondition;
        // offset 0xe8bb, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8bc, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8bd, size 0x1
        bool vehiclestimed;
        // offset 0xe8be, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8bf, size 0x1
        bool fogofwarminimap;
        // offset 0xe8c0, size 0x1
        bool teamkillpointloss;
        // offset 0xe8c1, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8c2, size 0x1
        bool perksenabled;
        // offset 0xe8c3, size 0x1
        bool allowmapscripting;
        // offset 0xe8c4, size 0x1
        bool robotshield;
        // offset 0xe8c5, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8c6, size 0x1
        bool allowkillcam;
        // offset 0xe8c7, size 0x1
        bool disableattachments;
        // offset 0xe8c8, size 0x1
        bool disablecompass;
        // offset 0xe8c9, size 0x1
        bool disableweapondrop;
        // offset 0xe8ca, size 0x1
        bool escalationenabled;
        // offset 0xe8cb, size 0x1
        bool disablecac;
        // offset 0xe8cc, size 0x1
        bool disableclassselection;
        // offset 0xe8cd, size 0x1
        bool autoteambalance;
        // offset 0xe8ce, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8cf, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8d0, size 0x1
        bool allowplayofthematch;
        // offset 0xe8d1, size 0x1
        bool allowprone;
        // offset 0xe8d2, size 0x1
        bool scoreresetondeath;
        // offset 0xe8d3, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8d4, size 0x1
        bool playerforcerespawn;
        // offset 0xe8d5, size 0x1
        bool multibomb;
        // offset 0xe8d6, size 0x1
        bool deathcircle;
        // offset 0xe8d7, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8d8, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d9, size 0x1
        bool deathpointloss;
        // offset 0xe8da, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8db, size 0x1
        bool rebootplayers;
        // offset 0xe8dc, size 0x1
        bool oldschoolmode;
        // offset 0xe8dd, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8de, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8df, size 0x1
        bool allowspectating;
        // offset 0xe8e0, size 0x1
        bool spawnselectenabled;
        // offset 0xe8e1, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8e2, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8e3, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8e4, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8e5, size 0x1
        bool disallowprone;
        // offset 0xe8e6, size 0x1
        bool moveplayers;
        // offset 0xe8e7, size 0x1
        bool disabletacinsert;
        // offset 0xe8e8, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e9, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8ea, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8eb, size 0x1
        bool zmdifficulty;
        // offset 0xe8ec, size 0x1
        bool pvponly;
        // offset 0xe8ed, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8ee, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8ef, size 0x1
        bool allowingameteamchange;
        // offset 0xe8f0, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8f1, size 0x1
        bool classicmode;
        // offset 0xe8f2, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8f3, size 0x1
        bool capdecay;
        // offset 0xe8f4, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8f5, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8f6, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8f7, size 0x1
        uint:1 __pad[1];
    };

    // idx 29 members 9 size 0xebe0
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd8, size 0x1
        bool inuse;
        // offset 0xebd9, size 0x1
        bool downloaded;
        // offset 0xebda, size 0x1
        bool isofficial;
        // offset 0xebdb, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58760
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58740
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_1412a7628b750ee4"

version 72 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x18d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0x1200
        hash_768aeb6b928320d outfit_breadcrumbs[24];
        // offset 0x12d0, size 0x600
        hash_32aeae7311d2cd9b hash_e5c77948998e49[24];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x2ad28
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x25380
        character characters[24];
        // offset 0x29420, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x29c90, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x2a820, size 0x500
        string(16) customclassname[10];
        // offset 0x2ad20, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x2ad21, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x2ad22, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x2ad23, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x1a950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x18d00
        character characters[16];
        // offset 0x18d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x1a108, size 0x800
        string(16) customclassname[16];
        // offset 0x1a908, size 0x10
        uint:10 killstreak1;
        // offset 0x1a918, size 0x10
        uint:10 killstreak2;
        // offset 0x1a928, size 0x10
        uint:10 killstreak3;
        // offset 0x1a938, size 0x10
        uint:10 killstreak4;
        // offset 0x1a948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1a949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1a94a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1a94b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x7ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x6340
        character characters[4];
        // offset 0x63c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x72c8, size 0x800
        string(16) customclassname[16];
        // offset 0x7ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x7ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x7aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x7acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 263 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool deathcirclerespawn;
        // offset 0xe892, size 0x1
        bool allowdogs;
        // offset 0xe893, size 0x1
        bool presetclassesperteam;
        // offset 0xe894, size 0x1
        bool hardcoremode;
        // offset 0xe895, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe896, size 0x1
        bool silentplant;
        // offset 0xe897, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe898, size 0x1
        bool drafteveryround;
        // offset 0xe899, size 0x1
        bool timepauseswheninzone;
        // offset 0xe89a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89b, size 0x1
        bool scoreperplayer;
        // offset 0xe89c, size 0x1
        bool kothmode;
        // offset 0xe89d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89f, size 0x1
        bool decayprogress;
        // offset 0xe8a0, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a1, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a2, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a3, size 0x1
        bool usespawngroups;
        // offset 0xe8a4, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a5, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a6, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a7, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a8, size 0x1
        bool headshotsonly;
        // offset 0xe8a9, size 0x1
        bool disablecontracts;
        // offset 0xe8aa, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8ab, size 0x1
        bool allowannouncer;
        // offset 0xe8ac, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ad, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ae, size 0x1
        bool decaycapturedzones;
        // offset 0xe8af, size 0x1
        bool neutralzone;
        // offset 0xe8b0, size 0x1
        bool onlyheadshots;
        // offset 0xe8b1, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b2, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b3, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b4, size 0x1
        bool vehiclestimed;
        // offset 0xe8b5, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b6, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b7, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b8, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b9, size 0x1
        bool perksenabled;
        // offset 0xe8ba, size 0x1
        bool allowmapscripting;
        // offset 0xe8bb, size 0x1
        bool robotshield;
        // offset 0xe8bc, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bd, size 0x1
        bool allowkillcam;
        // offset 0xe8be, size 0x1
        bool disableattachments;
        // offset 0xe8bf, size 0x1
        bool disablecompass;
        // offset 0xe8c0, size 0x1
        bool disableweapondrop;
        // offset 0xe8c1, size 0x1
        bool escalationenabled;
        // offset 0xe8c2, size 0x1
        bool disablecac;
        // offset 0xe8c3, size 0x1
        bool disableclassselection;
        // offset 0xe8c4, size 0x1
        bool autoteambalance;
        // offset 0xe8c5, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8c6, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c7, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c8, size 0x1
        bool allowprone;
        // offset 0xe8c9, size 0x1
        bool scoreresetondeath;
        // offset 0xe8ca, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8cb, size 0x1
        bool playerforcerespawn;
        // offset 0xe8cc, size 0x1
        bool multibomb;
        // offset 0xe8cd, size 0x1
        bool deathcircle;
        // offset 0xe8ce, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cf, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d0, size 0x1
        bool deathpointloss;
        // offset 0xe8d1, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d2, size 0x1
        bool rebootplayers;
        // offset 0xe8d3, size 0x1
        bool oldschoolmode;
        // offset 0xe8d4, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d5, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d6, size 0x1
        bool allowspectating;
        // offset 0xe8d7, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d8, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d9, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8da, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8db, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8dc, size 0x1
        bool disallowprone;
        // offset 0xe8dd, size 0x1
        bool moveplayers;
        // offset 0xe8de, size 0x1
        bool disabletacinsert;
        // offset 0xe8df, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e0, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8e1, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e2, size 0x1
        bool zmdifficulty;
        // offset 0xe8e3, size 0x1
        bool pvponly;
        // offset 0xe8e4, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e5, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e6, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e7, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e8, size 0x1
        bool classicmode;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8ea, size 0x1
        bool capdecay;
        // offset 0xe8eb, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ec, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8ed, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ee, size 0x2
        uint:1 __pad[2];
    };

    // idx 29 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_3e7176864f6907fd"

version 71 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x10d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0xc00
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0xcd0, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x1ed28
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x19380
        character characters[24];
        // offset 0x1d420, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1dc90, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e820, size 0x500
        string(16) customclassname[10];
        // offset 0x1ed20, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1ed21, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1ed22, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1ed23, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x12950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10d00
        character characters[16];
        // offset 0x10d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x12108, size 0x800
        string(16) customclassname[16];
        // offset 0x12908, size 0x10
        uint:10 killstreak1;
        // offset 0x12918, size 0x10
        uint:10 killstreak2;
        // offset 0x12928, size 0x10
        uint:10 killstreak3;
        // offset 0x12938, size 0x10
        uint:10 killstreak4;
        // offset 0x12948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1294a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1294b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x5ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4340
        character characters[4];
        // offset 0x43c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x52c8, size 0x800
        string(16) customclassname[16];
        // offset 0x5ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x5ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x5aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x5acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 263 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool deathcirclerespawn;
        // offset 0xe892, size 0x1
        bool allowdogs;
        // offset 0xe893, size 0x1
        bool presetclassesperteam;
        // offset 0xe894, size 0x1
        bool hardcoremode;
        // offset 0xe895, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe896, size 0x1
        bool silentplant;
        // offset 0xe897, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe898, size 0x1
        bool drafteveryround;
        // offset 0xe899, size 0x1
        bool timepauseswheninzone;
        // offset 0xe89a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89b, size 0x1
        bool scoreperplayer;
        // offset 0xe89c, size 0x1
        bool kothmode;
        // offset 0xe89d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89f, size 0x1
        bool decayprogress;
        // offset 0xe8a0, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a1, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a2, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a3, size 0x1
        bool usespawngroups;
        // offset 0xe8a4, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a5, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a6, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a7, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a8, size 0x1
        bool headshotsonly;
        // offset 0xe8a9, size 0x1
        bool disablecontracts;
        // offset 0xe8aa, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8ab, size 0x1
        bool allowannouncer;
        // offset 0xe8ac, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ad, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ae, size 0x1
        bool decaycapturedzones;
        // offset 0xe8af, size 0x1
        bool neutralzone;
        // offset 0xe8b0, size 0x1
        bool onlyheadshots;
        // offset 0xe8b1, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b2, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b3, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b4, size 0x1
        bool vehiclestimed;
        // offset 0xe8b5, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b6, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b7, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b8, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b9, size 0x1
        bool perksenabled;
        // offset 0xe8ba, size 0x1
        bool allowmapscripting;
        // offset 0xe8bb, size 0x1
        bool robotshield;
        // offset 0xe8bc, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bd, size 0x1
        bool allowkillcam;
        // offset 0xe8be, size 0x1
        bool disableattachments;
        // offset 0xe8bf, size 0x1
        bool disablecompass;
        // offset 0xe8c0, size 0x1
        bool disableweapondrop;
        // offset 0xe8c1, size 0x1
        bool escalationenabled;
        // offset 0xe8c2, size 0x1
        bool disablecac;
        // offset 0xe8c3, size 0x1
        bool disableclassselection;
        // offset 0xe8c4, size 0x1
        bool autoteambalance;
        // offset 0xe8c5, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8c6, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c7, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c8, size 0x1
        bool allowprone;
        // offset 0xe8c9, size 0x1
        bool scoreresetondeath;
        // offset 0xe8ca, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8cb, size 0x1
        bool playerforcerespawn;
        // offset 0xe8cc, size 0x1
        bool multibomb;
        // offset 0xe8cd, size 0x1
        bool deathcircle;
        // offset 0xe8ce, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cf, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d0, size 0x1
        bool deathpointloss;
        // offset 0xe8d1, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d2, size 0x1
        bool rebootplayers;
        // offset 0xe8d3, size 0x1
        bool oldschoolmode;
        // offset 0xe8d4, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d5, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d6, size 0x1
        bool allowspectating;
        // offset 0xe8d7, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d8, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d9, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8da, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8db, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8dc, size 0x1
        bool disallowprone;
        // offset 0xe8dd, size 0x1
        bool moveplayers;
        // offset 0xe8de, size 0x1
        bool disabletacinsert;
        // offset 0xe8df, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e0, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8e1, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e2, size 0x1
        bool zmdifficulty;
        // offset 0xe8e3, size 0x1
        bool pvponly;
        // offset 0xe8e4, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e5, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e6, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e7, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e8, size 0x1
        bool classicmode;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8ea, size 0x1
        bool capdecay;
        // offset 0xe8eb, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ec, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8ed, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ee, size 0x2
        uint:1 __pad[2];
    };

    // idx 29 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_4e20fb90962c5791"

version 70 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x100
    struct hash_729f42618cb8bf17 {
        // offset 0x0, size 0x100
        bool hash_28fca43539ff7944[256];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 6 size 0x10d0
    struct character {
        // offset 0x0, size 0x30
        uint:9 hash_44ed9a1ad38be40[hash_6eb19cb9fcf5e143];
        // offset 0x30, size 0x8
        uint:5 selectedoutfit;
        // offset 0x38, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x40, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xd0, size 0xc00
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0xcd0, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 15 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 16 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 17 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 13 size 0x1ed28
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x19380
        character characters[24];
        // offset 0x1d420, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1dc90, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e820, size 0x500
        string(16) customclassname[10];
        // offset 0x1ed20, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1ed21, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1ed22, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1ed23, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 14 size 0x12950
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10d00
        character characters[16];
        // offset 0x10d88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x12108, size 0x800
        string(16) customclassname[16];
        // offset 0x12908, size 0x10
        uint:10 killstreak1;
        // offset 0x12918, size 0x10
        uint:10 killstreak2;
        // offset 0x12928, size 0x10
        uint:10 killstreak3;
        // offset 0x12938, size 0x10
        uint:10 killstreak4;
        // offset 0x12948, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12949, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1294a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1294b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 10 size 0x5ad0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4340
        character characters[4];
        // offset 0x43c8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x52c8, size 0x800
        string(16) customclassname[16];
        // offset 0x5ac8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x5ac9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x5aca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x5acb, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 263 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool deathcirclerespawn;
        // offset 0xe892, size 0x1
        bool allowdogs;
        // offset 0xe893, size 0x1
        bool presetclassesperteam;
        // offset 0xe894, size 0x1
        bool hardcoremode;
        // offset 0xe895, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe896, size 0x1
        bool silentplant;
        // offset 0xe897, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe898, size 0x1
        bool drafteveryround;
        // offset 0xe899, size 0x1
        bool timepauseswheninzone;
        // offset 0xe89a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89b, size 0x1
        bool scoreperplayer;
        // offset 0xe89c, size 0x1
        bool kothmode;
        // offset 0xe89d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89f, size 0x1
        bool decayprogress;
        // offset 0xe8a0, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a1, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a2, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a3, size 0x1
        bool usespawngroups;
        // offset 0xe8a4, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a5, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a6, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a7, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a8, size 0x1
        bool headshotsonly;
        // offset 0xe8a9, size 0x1
        bool disablecontracts;
        // offset 0xe8aa, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8ab, size 0x1
        bool allowannouncer;
        // offset 0xe8ac, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ad, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ae, size 0x1
        bool decaycapturedzones;
        // offset 0xe8af, size 0x1
        bool neutralzone;
        // offset 0xe8b0, size 0x1
        bool onlyheadshots;
        // offset 0xe8b1, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b2, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b3, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b4, size 0x1
        bool vehiclestimed;
        // offset 0xe8b5, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b6, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b7, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b8, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b9, size 0x1
        bool perksenabled;
        // offset 0xe8ba, size 0x1
        bool allowmapscripting;
        // offset 0xe8bb, size 0x1
        bool robotshield;
        // offset 0xe8bc, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bd, size 0x1
        bool allowkillcam;
        // offset 0xe8be, size 0x1
        bool disableattachments;
        // offset 0xe8bf, size 0x1
        bool disablecompass;
        // offset 0xe8c0, size 0x1
        bool disableweapondrop;
        // offset 0xe8c1, size 0x1
        bool escalationenabled;
        // offset 0xe8c2, size 0x1
        bool disablecac;
        // offset 0xe8c3, size 0x1
        bool disableclassselection;
        // offset 0xe8c4, size 0x1
        bool autoteambalance;
        // offset 0xe8c5, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8c6, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c7, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c8, size 0x1
        bool allowprone;
        // offset 0xe8c9, size 0x1
        bool scoreresetondeath;
        // offset 0xe8ca, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8cb, size 0x1
        bool playerforcerespawn;
        // offset 0xe8cc, size 0x1
        bool multibomb;
        // offset 0xe8cd, size 0x1
        bool deathcircle;
        // offset 0xe8ce, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cf, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d0, size 0x1
        bool deathpointloss;
        // offset 0xe8d1, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d2, size 0x1
        bool rebootplayers;
        // offset 0xe8d3, size 0x1
        bool oldschoolmode;
        // offset 0xe8d4, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d5, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d6, size 0x1
        bool allowspectating;
        // offset 0xe8d7, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d8, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d9, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8da, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8db, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8dc, size 0x1
        bool disallowprone;
        // offset 0xe8dd, size 0x1
        bool moveplayers;
        // offset 0xe8de, size 0x1
        bool disabletacinsert;
        // offset 0xe8df, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e0, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8e1, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e2, size 0x1
        bool zmdifficulty;
        // offset 0xe8e3, size 0x1
        bool pvponly;
        // offset 0xe8e4, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e5, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e6, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e7, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e8, size 0x1
        bool classicmode;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8ea, size 0x1
        bool capdecay;
        // offset 0xe8eb, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ec, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8ed, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ee, size 0x2
        uint:1 __pad[2];
    };

    // idx 29 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 3
    enum hash_6eb19cb9fcf5e143 {
        wingsuit, // 0x0,
        parachute, // 0x1,
        trail, // 0x2
    };

    // idx 3 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_feaac979e71cd81a"

version 69 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x10a0
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xa0, size 0xc00
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0xca0, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e8a8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18f00
        character characters[24];
        // offset 0x1cfa0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d810, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e3a0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e8a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e8a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e8a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e8a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x12650
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10a00
        character characters[16];
        // offset 0x10a88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11e08, size 0x800
        string(16) customclassname[16];
        // offset 0x12608, size 0x10
        uint:10 killstreak1;
        // offset 0x12618, size 0x10
        uint:10 killstreak2;
        // offset 0x12628, size 0x10
        uint:10 killstreak3;
        // offset 0x12638, size 0x10
        uint:10 killstreak4;
        // offset 0x12648, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12649, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1264a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1264b, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x5a10
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4280
        character characters[4];
        // offset 0x4308, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x5208, size 0x800
        string(16) customclassname[16];
        // offset 0x5a08, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x5a09, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x5a0a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x5a0b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 263 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool deathcirclerespawn;
        // offset 0xe892, size 0x1
        bool allowdogs;
        // offset 0xe893, size 0x1
        bool presetclassesperteam;
        // offset 0xe894, size 0x1
        bool hardcoremode;
        // offset 0xe895, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe896, size 0x1
        bool silentplant;
        // offset 0xe897, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe898, size 0x1
        bool drafteveryround;
        // offset 0xe899, size 0x1
        bool timepauseswheninzone;
        // offset 0xe89a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89b, size 0x1
        bool scoreperplayer;
        // offset 0xe89c, size 0x1
        bool kothmode;
        // offset 0xe89d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89f, size 0x1
        bool decayprogress;
        // offset 0xe8a0, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a1, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a2, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a3, size 0x1
        bool usespawngroups;
        // offset 0xe8a4, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a5, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a6, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a7, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a8, size 0x1
        bool headshotsonly;
        // offset 0xe8a9, size 0x1
        bool disablecontracts;
        // offset 0xe8aa, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8ab, size 0x1
        bool allowannouncer;
        // offset 0xe8ac, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ad, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ae, size 0x1
        bool decaycapturedzones;
        // offset 0xe8af, size 0x1
        bool neutralzone;
        // offset 0xe8b0, size 0x1
        bool onlyheadshots;
        // offset 0xe8b1, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b2, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b3, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b4, size 0x1
        bool vehiclestimed;
        // offset 0xe8b5, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b6, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b7, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b8, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b9, size 0x1
        bool perksenabled;
        // offset 0xe8ba, size 0x1
        bool allowmapscripting;
        // offset 0xe8bb, size 0x1
        bool robotshield;
        // offset 0xe8bc, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bd, size 0x1
        bool allowkillcam;
        // offset 0xe8be, size 0x1
        bool disableattachments;
        // offset 0xe8bf, size 0x1
        bool disablecompass;
        // offset 0xe8c0, size 0x1
        bool disableweapondrop;
        // offset 0xe8c1, size 0x1
        bool escalationenabled;
        // offset 0xe8c2, size 0x1
        bool disablecac;
        // offset 0xe8c3, size 0x1
        bool disableclassselection;
        // offset 0xe8c4, size 0x1
        bool autoteambalance;
        // offset 0xe8c5, size 0x1
        bool hash_4bdd1bd86b610871;
        // offset 0xe8c6, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c7, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c8, size 0x1
        bool allowprone;
        // offset 0xe8c9, size 0x1
        bool scoreresetondeath;
        // offset 0xe8ca, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8cb, size 0x1
        bool playerforcerespawn;
        // offset 0xe8cc, size 0x1
        bool multibomb;
        // offset 0xe8cd, size 0x1
        bool deathcircle;
        // offset 0xe8ce, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cf, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8d0, size 0x1
        bool deathpointloss;
        // offset 0xe8d1, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d2, size 0x1
        bool rebootplayers;
        // offset 0xe8d3, size 0x1
        bool oldschoolmode;
        // offset 0xe8d4, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d5, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d6, size 0x1
        bool allowspectating;
        // offset 0xe8d7, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d8, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d9, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8da, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8db, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8dc, size 0x1
        bool disallowprone;
        // offset 0xe8dd, size 0x1
        bool moveplayers;
        // offset 0xe8de, size 0x1
        bool disabletacinsert;
        // offset 0xe8df, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8e0, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8e1, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e2, size 0x1
        bool zmdifficulty;
        // offset 0xe8e3, size 0x1
        bool pvponly;
        // offset 0xe8e4, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e5, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e6, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e7, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e8, size 0x1
        bool classicmode;
        // offset 0xe8e9, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8ea, size 0x1
        bool capdecay;
        // offset 0xe8eb, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ec, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8ed, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ee, size 0x2
        uint:1 __pad[2];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_a6b76513baeef6a8"

version 68 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 2 size 0xc0
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
        // offset 0x80, size 0x40
        bool hash_63930aafa5d6ac7b[64];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x10a0
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x8
        uint:5 hash_4d9fceac8ff24cbd;
        // offset 0x10, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0xa0, size 0xc00
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0xca0, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 6 size 0x60
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x8
        uint:5 warpaintoutfitindex;
        // offset 0x58, size 0x1
        bool locked;
        // offset 0x59, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e8a8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18f00
        character characters[24];
        // offset 0x1cfa0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d810, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e3a0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e8a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e8a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e8a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e8a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x12650
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10a00
        character characters[16];
        // offset 0x10a88, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11e08, size 0x800
        string(16) customclassname[16];
        // offset 0x12608, size 0x10
        uint:10 killstreak1;
        // offset 0x12618, size 0x10
        uint:10 killstreak2;
        // offset 0x12628, size 0x10
        uint:10 killstreak3;
        // offset 0x12638, size 0x10
        uint:10 killstreak4;
        // offset 0x12648, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12649, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1264a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1264b, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x5a10
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4280
        character characters[4];
        // offset 0x4308, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x5208, size 0x800
        string(16) customclassname[16];
        // offset 0x5a08, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x5a09, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x5a0a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x5a0b, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_52282fd2ea83e256"

version 67 {
    // idx 1 members 28 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:12 posx;
        // offset 0x30, size 0x10
        uint:12 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:10 scalex;
        // offset 0xc8, size 0x10
        uint:10 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool mask;
        // offset 0xfa, size 0x1
        bool blend;
        // offset 0xfb, size 0x1
        bool outline;
        // offset 0xfc, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 28 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:12 posx;
        // offset 0x20, size 0x10
        uint:12 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:10 scalex;
        // offset 0xb0, size 0x10
        uint:10 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool mask;
        // offset 0xe2, size 0x1
        bool blend;
        // offset 0xe3, size 0x1
        bool groupedlook;
        // offset 0xe4, size 0x1
        bool outline;
        // offset 0xe5, size 0x1
        bool isgrouped;
        // offset 0xe6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 4 size 0xc98
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 5 size 0x58
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x1
        bool locked;
        // offset 0x51, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x187e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x12e40
        character characters[24];
        // offset 0x16ee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x17750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x182e0, size 0x500
        string(16) customclassname[10];
        // offset 0x187e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x187e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x187e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x187e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0xe5d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xc980
        character characters[16];
        // offset 0xca08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0xdd88, size 0x800
        string(16) customclassname[16];
        // offset 0xe588, size 0x10
        uint:10 killstreak1;
        // offset 0xe598, size 0x10
        uint:10 killstreak2;
        // offset 0xe5a8, size 0x10
        uint:10 killstreak3;
        // offset 0xe5b8, size 0x10
        uint:10 killstreak4;
        // offset 0xe5c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0xe5c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0xe5ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0xe5cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x49f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x3260
        character characters[4];
        // offset 0x32e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x41e8, size 0x800
        string(16) customclassname[16];
        // offset 0x49e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x49e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x49ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x49eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_a2bdc6feddd49f65"

version 66 {
    // idx 1 members 27 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool blend;
        // offset 0xfa, size 0x1
        bool outline;
        // offset 0xfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 27 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool blend;
        // offset 0xe2, size 0x1
        bool groupedlook;
        // offset 0xe3, size 0x1
        bool outline;
        // offset 0xe4, size 0x1
        bool isgrouped;
        // offset 0xe5, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 4 size 0xc98
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 5 size 0x58
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x1
        bool locked;
        // offset 0x51, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x187e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x12e40
        character characters[24];
        // offset 0x16ee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x17750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x182e0, size 0x500
        string(16) customclassname[10];
        // offset 0x187e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x187e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x187e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x187e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0xe5d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xc980
        character characters[16];
        // offset 0xca08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0xdd88, size 0x800
        string(16) customclassname[16];
        // offset 0xe588, size 0x10
        uint:10 killstreak1;
        // offset 0xe598, size 0x10
        uint:10 killstreak2;
        // offset 0xe5a8, size 0x10
        uint:10 killstreak3;
        // offset 0xe5b8, size 0x10
        uint:10 killstreak4;
        // offset 0xe5c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0xe5c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0xe5ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0xe5cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x49f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x3260
        character characters[4];
        // offset 0x32e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x41e8, size 0x800
        string(16) customclassname[16];
        // offset 0x49e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x49e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x49ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x49eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_7a475e9a1926bbd3"

version 65 {
    // idx 1 members 27 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:10 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:4 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool blend;
        // offset 0xfa, size 0x1
        bool outline;
        // offset 0xfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 27 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool blend;
        // offset 0xe2, size 0x1
        bool groupedlook;
        // offset 0xe3, size 0x1
        bool outline;
        // offset 0xe4, size 0x1
        bool isgrouped;
        // offset 0xe5, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 5 size 0x58
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x1
        bool locked;
        // offset 0x51, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e7e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e2e0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e7e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e7e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e7e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e7e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x125d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11d88, size 0x800
        string(16) customclassname[16];
        // offset 0x12588, size 0x10
        uint:10 killstreak1;
        // offset 0x12598, size 0x10
        uint:10 killstreak2;
        // offset 0x125a8, size 0x10
        uint:10 killstreak3;
        // offset 0x125b8, size 0x10
        uint:10 killstreak4;
        // offset 0x125c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x125c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x125ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x125cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x59f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x51e8, size 0x800
        string(16) customclassname[16];
        // offset 0x59e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x59e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x59ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x59eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_bbae796a6fd62368"

version 64 {
    // idx 1 members 27 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:6 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool blend;
        // offset 0xfa, size 0x1
        bool outline;
        // offset 0xfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 27 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool blend;
        // offset 0xe2, size 0x1
        bool groupedlook;
        // offset 0xe3, size 0x1
        bool outline;
        // offset 0xe4, size 0x1
        bool isgrouped;
        // offset 0xe5, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 5 size 0x58
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
        // offset 0x50, size 0x1
        bool locked;
        // offset 0x51, size 0x7
        uint:1 __pad[7];
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e7e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e2e0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e7e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e7e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e7e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e7e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x125d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11d88, size 0x800
        string(16) customclassname[16];
        // offset 0x12588, size 0x10
        uint:10 killstreak1;
        // offset 0x12598, size 0x10
        uint:10 killstreak2;
        // offset 0x125a8, size 0x10
        uint:10 killstreak3;
        // offset 0x125b8, size 0x10
        uint:10 killstreak4;
        // offset 0x125c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x125c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x125ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x125cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x59f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x51e8, size 0x800
        string(16) customclassname[16];
        // offset 0x59e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x59e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x59ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x59eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_95d73fcbd60e4513"

version 63 {
    // idx 1 members 27 size 0x100
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:6 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xf8, size 0x1
        bool flip;
        // offset 0xf9, size 0x1
        bool blend;
        // offset 0xfa, size 0x1
        bool outline;
        // offset 0xfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 27 size 0xe8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x8
        uint:7 hash_4c4aff5f26267e55;
        // offset 0xe0, size 0x1
        bool flip;
        // offset 0xe1, size 0x1
        bool blend;
        // offset 0xe2, size 0x1
        bool groupedlook;
        // offset 0xe3, size 0x1
        bool outline;
        // offset 0xe4, size 0x1
        bool isgrouped;
        // offset 0xe5, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x49f8
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0x9f8
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x40e8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x4000
        emblemlayer layer[64];
        // offset 0x4000, size 0xe8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4a08
    struct emblem {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
        // offset 0x49f8, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x49f8
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x49f8
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x93f0
    struct paintshop {
        // offset 0x0, size 0x93f0
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9500
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x93f0
        paintshop paintjob;
        // offset 0x9430, size 0x20
        uint createtime;
        // offset 0x9450, size 0x80
        string(16) paintjobname;
        // offset 0x94d0, size 0x8
        int:2 readonly;
        // offset 0x94d8, size 0x8
        byte weaponindex;
        // offset 0x94e0, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e7e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e2e0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e7e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e7e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e7e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e7e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x125d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11d88, size 0x800
        string(16) customclassname[16];
        // offset 0x12588, size 0x10
        uint:10 killstreak1;
        // offset 0x12598, size 0x10
        uint:10 killstreak2;
        // offset 0x125a8, size 0x10
        uint:10 killstreak3;
        // offset 0x125b8, size 0x10
        uint:10 killstreak4;
        // offset 0x125c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x125c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x125ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x125cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x59f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x51e8, size 0x800
        string(16) customclassname[16];
        // offset 0x59e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x59e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x59ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x59eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_a300a0837905ff3c"

version 62 {
    // idx 1 members 26 size 0xf8
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:6 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x1
        bool flip;
        // offset 0xf1, size 0x1
        bool blend;
        // offset 0xf2, size 0x1
        bool outline;
        // offset 0xf3, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 26 size 0xe0
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x1
        bool flip;
        // offset 0xd9, size 0x1
        bool blend;
        // offset 0xda, size 0x1
        bool groupedlook;
        // offset 0xdb, size 0x1
        bool outline;
        // offset 0xdc, size 0x1
        bool isgrouped;
        // offset 0xdd, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x47a0
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3e00
        emblemlayer layer[64];
        // offset 0x3e00, size 0x9a0
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3ee0
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3e00
        emblemlayer layer[64];
        // offset 0x3e00, size 0xe0
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x47b0
    struct emblem {
        // offset 0x0, size 0x47a0
        hash_62325f44a788da78 layerinfo;
        // offset 0x47a0, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x47a0
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x47a0
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8f40
    struct paintshop {
        // offset 0x0, size 0x8f40
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9050
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8f40
        paintshop paintjob;
        // offset 0x8f80, size 0x20
        uint createtime;
        // offset 0x8fa0, size 0x80
        string(16) paintjobname;
        // offset 0x9020, size 0x8
        int:2 readonly;
        // offset 0x9028, size 0x8
        byte weaponindex;
        // offset 0x9030, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 16 members 6 size 0x68
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 6 size 0x68
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        uint:4 weaponmodelslot;
        // offset 0x8, size 0x8
        int:8 paintjobslot;
        // offset 0x10, size 0x10
        uint:10 itemindex;
        // offset 0x20, size 0x38
        int:8 attachment[7];
        // offset 0x58, size 0x8
        uint:6 reticleindex;
        // offset 0x60, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x138
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc8, size 0x68
        hash_2c79abcce61676aa primary;
        // offset 0x130, size 0x1
        bool primarygrenadecount;
        // offset 0x131, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xf0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0x88, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x128
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x68
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x68
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e7e8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xb90
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e2e0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e7e0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e7e1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e7e2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e7e3, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x125d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1380
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11d88, size 0x800
        string(16) customclassname[16];
        // offset 0x12588, size 0x10
        uint:10 killstreak1;
        // offset 0x12598, size 0x10
        uint:10 killstreak2;
        // offset 0x125a8, size 0x10
        uint:10 killstreak3;
        // offset 0x125b8, size 0x10
        uint:10 killstreak4;
        // offset 0x125c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x125c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x125ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x125cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x59f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xf00
        hash_1489c97943984433 customclass[16];
        // offset 0x51e8, size 0x800
        string(16) customclassname[16];
        // offset 0x59e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x59e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x59ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x59eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x11a8
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xc30
        hash_27580df06d232ed1 customclass[10];
        // offset 0xc60, size 0x8
        byte herogadget;
        // offset 0xc68, size 0x500
        string(16) customclassname[10];
        // offset 0x1168, size 0x8
        byte heroweapon;
        // offset 0x1170, size 0x8
        byte killstreak1;
        // offset 0x1178, size 0x8
        byte killstreak2;
        // offset 0x1180, size 0x8
        byte killstreak3;
        // offset 0x1188, size 0x8
        byte killstreak4;
        // offset 0x1190, size 0x8
        byte killstreak5;
        // offset 0x1198, size 0x8
        byte killstreak6;
        // offset 0x11a0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11a1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11a2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11a3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe8f0
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x34f8
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe7f0, size 0x8
        uint:7 drafttime;
        // offset 0xe7f8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe800, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe808, size 0x8
        uint:4 throwscore;
        // offset 0xe810, size 0x8
        uint:4 deposittime;
        // offset 0xe818, size 0x10
        fixed<10,2> extratime;
        // offset 0xe828, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe830, size 0x8
        uint:4 teamcount;
        // offset 0xe838, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe858, size 0x8
        uint:4 roundlimit;
        // offset 0xe860, size 0x8
        uint:2 charactercustomization;
        // offset 0xe868, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe870, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe878, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe888, size 0x1
        bool delayplayer;
        // offset 0xe889, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe88a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe88b, size 0x1
        bool magic;
        // offset 0xe88c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe88d, size 0x1
        bool draftenabled;
        // offset 0xe88e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe88f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe890, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe891, size 0x1
        bool allowdogs;
        // offset 0xe892, size 0x1
        bool presetclassesperteam;
        // offset 0xe893, size 0x1
        bool hardcoremode;
        // offset 0xe894, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe895, size 0x1
        bool silentplant;
        // offset 0xe896, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe897, size 0x1
        bool drafteveryround;
        // offset 0xe898, size 0x1
        bool timepauseswheninzone;
        // offset 0xe899, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe89a, size 0x1
        bool scoreperplayer;
        // offset 0xe89b, size 0x1
        bool kothmode;
        // offset 0xe89c, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe89d, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe89e, size 0x1
        bool decayprogress;
        // offset 0xe89f, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe8a0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe8a1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe8a2, size 0x1
        bool usespawngroups;
        // offset 0xe8a3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe8a4, size 0x1
        bool allowbattlechatter;
        // offset 0xe8a5, size 0x1
        bool fowrevealenabled;
        // offset 0xe8a6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe8a7, size 0x1
        bool headshotsonly;
        // offset 0xe8a8, size 0x1
        bool disablecontracts;
        // offset 0xe8a9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe8aa, size 0x1
        bool allowannouncer;
        // offset 0xe8ab, size 0x1
        bool disallowaimslowdown;
        // offset 0xe8ac, size 0x1
        bool vehiclesenabled;
        // offset 0xe8ad, size 0x1
        bool decaycapturedzones;
        // offset 0xe8ae, size 0x1
        bool neutralzone;
        // offset 0xe8af, size 0x1
        bool onlyheadshots;
        // offset 0xe8b0, size 0x1
        bool flagcapturecondition;
        // offset 0xe8b1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe8b2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe8b3, size 0x1
        bool vehiclestimed;
        // offset 0xe8b4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe8b5, size 0x1
        bool fogofwarminimap;
        // offset 0xe8b6, size 0x1
        bool teamkillpointloss;
        // offset 0xe8b7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe8b8, size 0x1
        bool perksenabled;
        // offset 0xe8b9, size 0x1
        bool allowmapscripting;
        // offset 0xe8ba, size 0x1
        bool robotshield;
        // offset 0xe8bb, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe8bc, size 0x1
        bool allowkillcam;
        // offset 0xe8bd, size 0x1
        bool disableattachments;
        // offset 0xe8be, size 0x1
        bool disablecompass;
        // offset 0xe8bf, size 0x1
        bool disableweapondrop;
        // offset 0xe8c0, size 0x1
        bool escalationenabled;
        // offset 0xe8c1, size 0x1
        bool disablecac;
        // offset 0xe8c2, size 0x1
        bool disableclassselection;
        // offset 0xe8c3, size 0x1
        bool autoteambalance;
        // offset 0xe8c4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe8c5, size 0x1
        bool allowplayofthematch;
        // offset 0xe8c6, size 0x1
        bool allowprone;
        // offset 0xe8c7, size 0x1
        bool scoreresetondeath;
        // offset 0xe8c8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe8c9, size 0x1
        bool playerforcerespawn;
        // offset 0xe8ca, size 0x1
        bool multibomb;
        // offset 0xe8cb, size 0x1
        bool deathcircle;
        // offset 0xe8cc, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe8cd, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe8ce, size 0x1
        bool deathpointloss;
        // offset 0xe8cf, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe8d0, size 0x1
        bool rebootplayers;
        // offset 0xe8d1, size 0x1
        bool oldschoolmode;
        // offset 0xe8d2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe8d3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe8d4, size 0x1
        bool allowspectating;
        // offset 0xe8d5, size 0x1
        bool spawnselectenabled;
        // offset 0xe8d6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe8d7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe8d8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe8d9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe8da, size 0x1
        bool disallowprone;
        // offset 0xe8db, size 0x1
        bool moveplayers;
        // offset 0xe8dc, size 0x1
        bool disabletacinsert;
        // offset 0xe8dd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe8de, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe8df, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe8e0, size 0x1
        bool zmdifficulty;
        // offset 0xe8e1, size 0x1
        bool pvponly;
        // offset 0xe8e2, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe8e3, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe8e4, size 0x1
        bool allowingameteamchange;
        // offset 0xe8e5, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe8e6, size 0x1
        bool classicmode;
        // offset 0xe8e7, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe8e8, size 0x1
        bool capdecay;
        // offset 0xe8e9, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe8ea, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe8eb, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe8ec, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xebd8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe8f0
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xebd0, size 0x1
        bool inuse;
        // offset 0xebd1, size 0x1
        bool downloaded;
        // offset 0xebd2, size 0x1
        bool isofficial;
        // offset 0xebd3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x58730
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x58710
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_85a60a1e27126105"

version 61 {
    // idx 1 members 26 size 0xf8
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:2 gradienttype;
        // offset 0x80, size 0x8
        uint:6 groupindex;
        // offset 0x88, size 0x10
        uint:9 gradientangle;
        // offset 0x98, size 0x8
        uint:8 alpha1;
        // offset 0xa0, size 0x8
        uint:8 green1;
        // offset 0xa8, size 0x10
        uint:9 materialangle;
        // offset 0xb8, size 0x10
        uint:11 scalex;
        // offset 0xc8, size 0x10
        uint:11 scaley;
        // offset 0xd8, size 0x8
        uint:8 materialscalex;
        // offset 0xe0, size 0x8
        uint:8 materialscaley;
        // offset 0xe8, size 0x8
        uint:7 materialid;
        // offset 0xf0, size 0x1
        bool flip;
        // offset 0xf1, size 0x1
        bool blend;
        // offset 0xf2, size 0x1
        bool outline;
        // offset 0xf3, size 0x5
        uint:1 __pad[5];
    };

    // idx 2 members 26 size 0xe0
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x8
        uint:2 gradienttype;
        // offset 0x70, size 0x10
        uint:9 gradientangle;
        // offset 0x80, size 0x8
        uint:8 alpha1;
        // offset 0x88, size 0x8
        uint:8 green1;
        // offset 0x90, size 0x10
        uint:9 materialangle;
        // offset 0xa0, size 0x10
        uint:11 scalex;
        // offset 0xb0, size 0x10
        uint:11 scaley;
        // offset 0xc0, size 0x8
        uint:8 materialscalex;
        // offset 0xc8, size 0x8
        uint:8 materialscaley;
        // offset 0xd0, size 0x8
        uint:7 materialid;
        // offset 0xd8, size 0x1
        bool flip;
        // offset 0xd9, size 0x1
        bool blend;
        // offset 0xda, size 0x1
        bool groupedlook;
        // offset 0xdb, size 0x1
        bool outline;
        // offset 0xdc, size 0x1
        bool isgrouped;
        // offset 0xdd, size 0x3
        uint:1 __pad[3];
    };

    // idx 3 members 2 size 0x47a0
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3e00
        emblemlayer layer[64];
        // offset 0x3e00, size 0x9a0
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3ee0
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3e00
        emblemlayer layer[64];
        // offset 0x3e00, size 0xe0
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x47b0
    struct emblem {
        // offset 0x0, size 0x47a0
        hash_62325f44a788da78 layerinfo;
        // offset 0x47a0, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x47a0
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x47a0
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8f40
    struct paintshop {
        // offset 0x0, size 0x8f40
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x9050
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8f40
        paintshop paintjob;
        // offset 0x8f80, size 0x20
        uint createtime;
        // offset 0x8fa0, size 0x80
        string(16) paintjobname;
        // offset 0x9020, size 0x8
        int:2 readonly;
        // offset 0x9028, size 0x8
        byte weaponindex;
        // offset 0x9030, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 16 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e748
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e240, size 0x500
        string(16) customclassname[10];
        // offset 0x1e740, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e741, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e742, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e743, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x124d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11c88, size 0x800
        string(16) customclassname[16];
        // offset 0x12488, size 0x10
        uint:10 killstreak1;
        // offset 0x12498, size 0x10
        uint:10 killstreak2;
        // offset 0x124a8, size 0x10
        uint:10 killstreak3;
        // offset 0x124b8, size 0x10
        uint:10 killstreak4;
        // offset 0x124c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x124c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x124ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x124cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x58f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50e8, size 0x800
        string(16) customclassname[16];
        // offset 0x58e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_e2911d82458587ac"

version 60 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x8ba0
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8a90
        paintshop paintjob;
        // offset 0x8ad0, size 0x20
        uint createtime;
        // offset 0x8af0, size 0x80
        string(16) paintjobname;
        // offset 0x8b70, size 0x8
        int:2 readonly;
        // offset 0x8b78, size 0x8
        byte weaponindex;
        // offset 0x8b80, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 16 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e748
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e240, size 0x500
        string(16) customclassname[10];
        // offset 0x1e740, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e741, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e742, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e743, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x124d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11c88, size 0x800
        string(16) customclassname[16];
        // offset 0x12488, size 0x10
        uint:10 killstreak1;
        // offset 0x12498, size 0x10
        uint:10 killstreak2;
        // offset 0x124a8, size 0x10
        uint:10 killstreak3;
        // offset 0x124b8, size 0x10
        uint:10 killstreak4;
        // offset 0x124c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x124c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x124ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x124cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x58f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50e8, size 0x800
        string(16) customclassname[16];
        // offset 0x58e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_ecf8c25b282501d3"

version 59 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x8ba0
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8a90
        paintshop paintjob;
        // offset 0x8ad0, size 0x20
        uint createtime;
        // offset 0x8af0, size 0x80
        string(16) paintjobname;
        // offset 0x8b70, size 0x8
        int:2 readonly;
        // offset 0x8b78, size 0x8
        byte weaponindex;
        // offset 0x8b80, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x10
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x10
        bool hash_3d834aee4bd18d13[16];
    };

    // idx 11 members 1 size 0x80
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x80
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:5 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1098
    struct character {
        // offset 0x0, size 0x8
        uint:5 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[16];
        // offset 0x898, size 0x400
        hash_32aeae7311d2cd9b hash_e5c77948998e49[16];
        // offset 0xc98, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 15 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:5 outfitindex;
        // offset 0x8, size 0x40
        uint:5 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 16 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 17 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 20 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 22 members 13 size 0x1e748
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18e40
        character characters[24];
        // offset 0x1cee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d750, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e240, size 0x500
        string(16) customclassname[10];
        // offset 0x1e740, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e741, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e742, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e743, size 0x5
        uint:1 __pad[5];
    };

    // idx 23 members 14 size 0x124d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10980
        character characters[16];
        // offset 0x10a08, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11c88, size 0x800
        string(16) customclassname[16];
        // offset 0x12488, size 0x10
        uint:10 killstreak1;
        // offset 0x12498, size 0x10
        uint:10 killstreak2;
        // offset 0x124a8, size 0x10
        uint:10 killstreak3;
        // offset 0x124b8, size 0x10
        uint:10 killstreak4;
        // offset 0x124c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x124c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x124ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x124cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 10 size 0x58f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4260
        character characters[4];
        // offset 0x42e8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50e8, size 0x800
        string(16) customclassname[16];
        // offset 0x58e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 27 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 28 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_aa1bc55f6b404648"

version 58 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x8ba0
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8a90
        paintshop paintjob;
        // offset 0x8ad0, size 0x20
        uint createtime;
        // offset 0x8af0, size 0x80
        string(16) paintjobname;
        // offset 0x8b70, size 0x8
        int:2 readonly;
        // offset 0x8b78, size 0x8
        byte weaponindex;
        // offset 0x8b80, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x8
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x8
        bool hash_3d834aee4bd18d13[8];
    };

    // idx 11 members 1 size 0x40
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x40
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1498
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x90
        uint:11 hash_20d6751cb2f9ca09[9];
        // offset 0x98, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x898, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
        // offset 0x1098, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 1 size 0x1
    struct hash_75ef0562f1cc95c9 {
        // offset 0x0, size 0x1
        bool hash_3d834aee4bd18d13[1];
    };

    // idx 15 members 1 size 0x8
    struct hash_1b8c44968f4c52b6 {
        // offset 0x0, size 0x8
        hash_75ef0562f1cc95c9 parts[hash_5ab26f037efe82c];
    };

    // idx 16 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 17 members 4 size 0x350
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x100
        hash_1b8c44968f4c52b6 outfit_breadcrumbs[32];
        // offset 0x108, size 0x148
        variant showcaseweapon;
        // offset 0x250, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 18 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 19 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:4 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x24748
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x1ee40
        character characters[24];
        // offset 0x22ee0, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x23750, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x24240, size 0x500
        string(16) customclassname[10];
        // offset 0x24740, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x24741, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x24742, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x24743, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x164d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x14980
        character characters[16];
        // offset 0x14a08, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x15c88, size 0x800
        string(16) customclassname[16];
        // offset 0x16488, size 0x10
        uint:10 killstreak1;
        // offset 0x16498, size 0x10
        uint:10 killstreak2;
        // offset 0x164a8, size 0x10
        uint:10 killstreak3;
        // offset 0x164b8, size 0x10
        uint:10 killstreak4;
        // offset 0x164c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x164c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x164ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x164cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x68f0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x5260
        character characters[4];
        // offset 0x52e8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x60e8, size 0x800
        string(16) customclassname[16];
        // offset 0x68e8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x68e9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x68ea, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x68eb, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_bd0578de013b373a"

version 57 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x8ba0
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8a90
        paintshop paintjob;
        // offset 0x8ad0, size 0x20
        uint createtime;
        // offset 0x8af0, size 0x80
        string(16) paintjobname;
        // offset 0x8b70, size 0x8
        int:2 readonly;
        // offset 0x8b78, size 0x8
        byte weaponindex;
        // offset 0x8b80, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x8
    struct hash_705fa6d3f50ff148 {
        // offset 0x0, size 0x8
        bool hash_3d834aee4bd18d13[8];
    };

    // idx 11 members 1 size 0x40
    struct hash_768aeb6b928320d {
        // offset 0x0, size 0x40
        hash_705fa6d3f50ff148 parts[hash_5ab26f037efe82c];
    };

    // idx 12 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 13 members 5 size 0x1488
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x80
        uint:11 hash_20d6751cb2f9ca09[8];
        // offset 0x88, size 0x800
        hash_768aeb6b928320d outfit_breadcrumbs[32];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
        // offset 0x1088, size 0x400
        bool hash_f48e22ced35e56d[1024];
    };

    // idx 14 members 1 size 0x1
    struct hash_75ef0562f1cc95c9 {
        // offset 0x0, size 0x1
        bool hash_3d834aee4bd18d13[1];
    };

    // idx 15 members 1 size 0x8
    struct hash_1b8c44968f4c52b6 {
        // offset 0x0, size 0x8
        hash_75ef0562f1cc95c9 parts[hash_5ab26f037efe82c];
    };

    // idx 16 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 17 members 4 size 0x350
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x100
        hash_1b8c44968f4c52b6 outfit_breadcrumbs[32];
        // offset 0x108, size 0x148
        variant showcaseweapon;
        // offset 0x250, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 18 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 19 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:4 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x245c8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x1ecc0
        character characters[24];
        // offset 0x22d60, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x235d0, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x240c0, size 0x500
        string(16) customclassname[10];
        // offset 0x245c0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x245c1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x245c2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x245c3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x163d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x14880
        character characters[16];
        // offset 0x14908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x15b88, size 0x800
        string(16) customclassname[16];
        // offset 0x16388, size 0x10
        uint:10 killstreak1;
        // offset 0x16398, size 0x10
        uint:10 killstreak2;
        // offset 0x163a8, size 0x10
        uint:10 killstreak3;
        // offset 0x163b8, size 0x10
        uint:10 killstreak4;
        // offset 0x163c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x163c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x163ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x163cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x68b0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x5220
        character characters[4];
        // offset 0x52a8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x60a8, size 0x800
        string(16) customclassname[16];
        // offset 0x68a8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x68a9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x68aa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x68ab, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_425dae3068dc87f6"

version 56 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 7 size 0x8ba0
    struct weaponpaintjob {
        // offset 0x0, size 0x40
        uint64 xuid;
        // offset 0x40, size 0x8a90
        paintshop paintjob;
        // offset 0x8ad0, size 0x20
        uint createtime;
        // offset 0x8af0, size 0x80
        string(16) paintjobname;
        // offset 0x8b70, size 0x8
        int:2 readonly;
        // offset 0x8b78, size 0x8
        byte weaponindex;
        // offset 0x8b80, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:4 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 21 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 23 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 24 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 26 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 27 members 13 size 0x1e5c8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18cc0
        character characters[24];
        // offset 0x1cd60, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d5d0, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e0c0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e5c0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e5c1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e5c2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e5c3, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 10 size 0x58b0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4220
        character characters[4];
        // offset 0x42a8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50a8, size 0x800
        string(16) customclassname[16];
        // offset 0x58a8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58a9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58aa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58ab, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 31 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 32 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 33 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_5b82a067e649aac7"

version 55 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:4 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 21 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 23 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 24 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 26 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 27 members 13 size 0x1e5c8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18cc0
        character characters[24];
        // offset 0x1cd60, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d5d0, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e0c0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e5c0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e5c1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e5c2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e5c3, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 10 size 0x58b0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4220
        character characters[4];
        // offset 0x42a8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50a8, size 0x800
        string(16) customclassname[16];
        // offset 0x58a8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58a9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58aa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58ab, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 31 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 32 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 33 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_b005bcf331523d76"

version 54 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 3 size 0x50
    struct selectedcharacter {
        // offset 0x0, size 0x8
        uint:6 outfitindex;
        // offset 0x8, size 0x40
        uint:4 outfititems[hash_5ab26f037efe82c];
        // offset 0x48, size 0x8
        uint:6 characterhead;
    };

    // idx 21 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 23 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 24 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 26 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 27 members 13 size 0x1e5c8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0x18cc0
        character characters[24];
        // offset 0x1cd60, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1d5d0, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1e0c0, size 0x500
        string(16) customclassname[10];
        // offset 0x1e5c0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1e5c1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1e5c2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1e5c3, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 10 size 0x58b0
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x4220
        character characters[4];
        // offset 0x42a8, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x50a8, size 0x800
        string(16) customclassname[16];
        // offset 0x58a8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x58a9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x58aa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x58ab, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 31 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 32 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 33 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_e57b67cc3bcd0d07"

version 53 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10ee0
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xb5d8
        character characters[11];
        // offset 0xf678, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xfee8, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x109d8, size 0x500
        string(16) customclassname[10];
        // offset 0x10ed8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10ed9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10eda, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10edb, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x11f10
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x11708, size 0x800
        string(16) customclassname[16];
        // offset 0x11f08, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11f09, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11f0a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11f0b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 261 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x1
        bool hash_201c1769d32b30d3;
        // offset 0xe70c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_ff08da16fd47546f"

version 52 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:11 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10ee0
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xb5d8
        character characters[11];
        // offset 0xf678, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xfee8, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x109d8, size 0x500
        string(16) customclassname[10];
        // offset 0x10ed8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10ed9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10eda, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10edb, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x11f10
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x11708, size 0x800
        string(16) customclassname[16];
        // offset 0x11f08, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11f09, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11f0a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11f0b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 260 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x5
        uint:1 __pad[5];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_9cfa4aed9c161634"

version 51 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1088
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10ee0
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xb5d8
        character characters[11];
        // offset 0xf678, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xfee8, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x109d8, size 0x500
        string(16) customclassname[10];
        // offset 0x10ed8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10ed9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10eda, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10edb, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x123d0
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x11b88, size 0x800
        string(16) customclassname[16];
        // offset 0x12388, size 0x10
        uint:10 killstreak1;
        // offset 0x12398, size 0x10
        uint:10 killstreak2;
        // offset 0x123a8, size 0x10
        uint:10 killstreak3;
        // offset 0x123b8, size 0x10
        uint:10 killstreak4;
        // offset 0x123c8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x123c9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x123ca, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x123cb, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x11f10
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x10880
        character characters[16];
        // offset 0x10908, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x11708, size 0x800
        string(16) customclassname[16];
        // offset 0x11f08, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11f09, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11f0a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11f0b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 260 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x5
        uint:1 __pad[5];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_e1132106a562328a"

version 50 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 5 size 0x11d0
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x80
        uint:10 hash_20d6751cb2f9ca09[8];
        // offset 0x888, size 0x148
        variant showcaseweapon;
        // offset 0x9d0, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x11cf8
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xc3f0
        character characters[11];
        // offset 0x10490, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x10d00, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x117f0, size 0x500
        string(16) customclassname[10];
        // offset 0x11cf0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11cf1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11cf2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11cf3, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x13850
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11d00
        character characters[16];
        // offset 0x11d88, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x13008, size 0x800
        string(16) customclassname[16];
        // offset 0x13808, size 0x10
        uint:10 killstreak1;
        // offset 0x13818, size 0x10
        uint:10 killstreak2;
        // offset 0x13828, size 0x10
        uint:10 killstreak3;
        // offset 0x13838, size 0x10
        uint:10 killstreak4;
        // offset 0x13848, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x13849, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1384a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1384b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x13390
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11d00
        character characters[16];
        // offset 0x11d88, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x12b88, size 0x800
        string(16) customclassname[16];
        // offset 0x13388, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x13389, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1338a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1338b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 260 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x5
        uint:1 __pad[5];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_fed16a93fa458a79"

version 49 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1150
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x11778
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xbe70
        character characters[11];
        // offset 0xff10, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x10780, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x11270, size 0x500
        string(16) customclassname[10];
        // offset 0x11770, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11771, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11772, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11773, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x13050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x12808, size 0x800
        string(16) customclassname[16];
        // offset 0x13008, size 0x10
        uint:10 killstreak1;
        // offset 0x13018, size 0x10
        uint:10 killstreak2;
        // offset 0x13028, size 0x10
        uint:10 killstreak3;
        // offset 0x13038, size 0x10
        uint:10 killstreak4;
        // offset 0x13048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x13049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1304a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1304b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x12b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x12388, size 0x800
        string(16) customclassname[16];
        // offset 0x12b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x12b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x12b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 260 size 0xe710
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x58, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x68, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x70, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x78, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0x80, size 0x8
        uint:5 pointspermeleekill;
        // offset 0x88, size 0x8
        uint:6 preroundperiod;
        // offset 0x90, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0x98, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xa0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xa8, size 0x8
        uint:4 maxplayers;
        // offset 0xb0, size 0x20
        int forwardspawnhealth;
        // offset 0xd0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xd8, size 0x8
        uint:3 ballcount;
        // offset 0xe0, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0xf0, size 0x8
        uint:3 gunselection;
        // offset 0xf8, size 0x800
        uint:2 restricteditems[256];
        // offset 0x8f8, size 0x8
        uint:5 prematchrequirement;
        // offset 0x900, size 0x8
        uint:3 spectatetype;
        // offset 0x908, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x910, size 0x8
        uint:5 roundwinlimit;
        // offset 0x918, size 0x10
        uint:10 antiboostdistance;
        // offset 0x928, size 0x10
        uint:15 roundscorelimit;
        // offset 0x938, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x940, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x948, size 0x8
        fixed<8,2> defusetime;
        // offset 0x950, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x958, size 0x8
        uint:5 maxallocation;
        // offset 0x960, size 0x8
        uint:4 carryscore;
        // offset 0x968, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x970, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x978, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x980, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xae80, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xae88, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xae90, size 0x8
        uint:7 idleflagresettime;
        // offset 0xae98, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaea0, size 0x8
        uint:4 setbacks;
        // offset 0xaea8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaeb8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaec8, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaed8, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaef8, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf08, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf10, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf18, size 0x10
        uint:15 scorelimit;
        // offset 0xaf28, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf30, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf38, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf40, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf48, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf58, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xaf60, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xaf68, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xaf70, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xaff0, size 0x8
        uint:3 objectivepingtime;
        // offset 0xaff8, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb000, size 0x8
        uint:8 carrierarmor;
        // offset 0xb008, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb010, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb018, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb028, size 0x8
        uint:5 boottime;
        // offset 0xb030, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb038, size 0x8
        uint:7 teamnumlives;
        // offset 0xb040, size 0x8
        fixed<8,2> planttime;
        // offset 0xb048, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb050, size 0x10
        uint:10 inactivitykick;
        // offset 0xb060, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb068, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb070, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb080, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb090, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0a0, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0b0, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb0c0, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb0d0, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb0d8, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb0e0, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb0e8, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb0f0, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb0f8, size 0x10
        uint:11 objectivehealth;
        // offset 0xb108, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb110, size 0x8
        uint:2 robotspeed;
        // offset 0xb118, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb120, size 0x8
        uint:7 servermsec;
        // offset 0xb128, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb130, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb140, size 0x10
        uint:10 leaderbonus;
        // offset 0xb150, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb158, size 0x10
        uint:9 autodestroytime;
        // offset 0xb168, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb170, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb178, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb180, size 0x8
        uint:5 startround;
        // offset 0xb188, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb190, size 0x8
        uint:6 prematchperiod;
        // offset 0xb198, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1a0, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1a8, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1b0, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb1b8, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb1c0, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb1c8, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb1d0, size 0x8
        uint:7 playernumlives;
        // offset 0xb1d8, size 0x8
        uint:2 infectionmode;
        // offset 0xb1e0, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb1e8, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb1f0, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb1f8, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb200, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb208, size 0x8
        uint:6 reboottime;
        // offset 0xb210, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb218, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb220, size 0x8
        uint:4 pickuptime;
        // offset 0xb228, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb248, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb250, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb258, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb260, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb268, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb270, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb280, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb288, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb290, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb298, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb2a0, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb2a8, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb2b0, size 0x8
        uint:4 roundswitch;
        // offset 0xb2b8, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb2c0, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb2c8, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb2d0, size 0x8
        uint:5 weaponcount;
        // offset 0xb2d8, size 0x8
        uint:7 weapontimer;
        // offset 0xb2e0, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb2f0, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb2f8, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe610, size 0x8
        uint:7 drafttime;
        // offset 0xe618, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe620, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe628, size 0x8
        uint:4 throwscore;
        // offset 0xe630, size 0x8
        uint:4 deposittime;
        // offset 0xe638, size 0x10
        fixed<10,2> extratime;
        // offset 0xe648, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe650, size 0x8
        uint:4 teamcount;
        // offset 0xe658, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe678, size 0x8
        uint:4 roundlimit;
        // offset 0xe680, size 0x8
        uint:2 charactercustomization;
        // offset 0xe688, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe690, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe698, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe6a8, size 0x1
        bool delayplayer;
        // offset 0xe6a9, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe6aa, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe6ab, size 0x1
        bool magic;
        // offset 0xe6ac, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe6ad, size 0x1
        bool draftenabled;
        // offset 0xe6ae, size 0x1
        bool droppedtagrespawn;
        // offset 0xe6af, size 0x1
        bool voipkillershearvictim;
        // offset 0xe6b0, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe6b1, size 0x1
        bool allowdogs;
        // offset 0xe6b2, size 0x1
        bool presetclassesperteam;
        // offset 0xe6b3, size 0x1
        bool hardcoremode;
        // offset 0xe6b4, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe6b5, size 0x1
        bool silentplant;
        // offset 0xe6b6, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe6b7, size 0x1
        bool drafteveryround;
        // offset 0xe6b8, size 0x1
        bool timepauseswheninzone;
        // offset 0xe6b9, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe6ba, size 0x1
        bool scoreperplayer;
        // offset 0xe6bb, size 0x1
        bool kothmode;
        // offset 0xe6bc, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe6bd, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe6be, size 0x1
        bool decayprogress;
        // offset 0xe6bf, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe6c0, size 0x1
        bool cumulativeroundscores;
        // offset 0xe6c1, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe6c2, size 0x1
        bool usespawngroups;
        // offset 0xe6c3, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe6c4, size 0x1
        bool allowbattlechatter;
        // offset 0xe6c5, size 0x1
        bool fowrevealenabled;
        // offset 0xe6c6, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe6c7, size 0x1
        bool headshotsonly;
        // offset 0xe6c8, size 0x1
        bool disablecontracts;
        // offset 0xe6c9, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe6ca, size 0x1
        bool allowannouncer;
        // offset 0xe6cb, size 0x1
        bool disallowaimslowdown;
        // offset 0xe6cc, size 0x1
        bool vehiclesenabled;
        // offset 0xe6cd, size 0x1
        bool decaycapturedzones;
        // offset 0xe6ce, size 0x1
        bool neutralzone;
        // offset 0xe6cf, size 0x1
        bool onlyheadshots;
        // offset 0xe6d0, size 0x1
        bool flagcapturecondition;
        // offset 0xe6d1, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe6d2, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe6d3, size 0x1
        bool vehiclestimed;
        // offset 0xe6d4, size 0x1
        bool pregamedraftenabled;
        // offset 0xe6d5, size 0x1
        bool fogofwarminimap;
        // offset 0xe6d6, size 0x1
        bool teamkillpointloss;
        // offset 0xe6d7, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe6d8, size 0x1
        bool perksenabled;
        // offset 0xe6d9, size 0x1
        bool allowmapscripting;
        // offset 0xe6da, size 0x1
        bool robotshield;
        // offset 0xe6db, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe6dc, size 0x1
        bool allowkillcam;
        // offset 0xe6dd, size 0x1
        bool disableattachments;
        // offset 0xe6de, size 0x1
        bool disablecompass;
        // offset 0xe6df, size 0x1
        bool disableweapondrop;
        // offset 0xe6e0, size 0x1
        bool escalationenabled;
        // offset 0xe6e1, size 0x1
        bool disablecac;
        // offset 0xe6e2, size 0x1
        bool disableclassselection;
        // offset 0xe6e3, size 0x1
        bool autoteambalance;
        // offset 0xe6e4, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe6e5, size 0x1
        bool allowplayofthematch;
        // offset 0xe6e6, size 0x1
        bool allowprone;
        // offset 0xe6e7, size 0x1
        bool scoreresetondeath;
        // offset 0xe6e8, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe6e9, size 0x1
        bool playerforcerespawn;
        // offset 0xe6ea, size 0x1
        bool multibomb;
        // offset 0xe6eb, size 0x1
        bool deathcircle;
        // offset 0xe6ec, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe6ed, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe6ee, size 0x1
        bool deathpointloss;
        // offset 0xe6ef, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe6f0, size 0x1
        bool rebootplayers;
        // offset 0xe6f1, size 0x1
        bool oldschoolmode;
        // offset 0xe6f2, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe6f3, size 0x1
        bool allowfinalkillcam;
        // offset 0xe6f4, size 0x1
        bool allowspectating;
        // offset 0xe6f5, size 0x1
        bool spawnselectenabled;
        // offset 0xe6f6, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe6f7, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe6f8, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe6f9, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe6fa, size 0x1
        bool disallowprone;
        // offset 0xe6fb, size 0x1
        bool moveplayers;
        // offset 0xe6fc, size 0x1
        bool disabletacinsert;
        // offset 0xe6fd, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe6fe, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe6ff, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe700, size 0x1
        bool zmdifficulty;
        // offset 0xe701, size 0x1
        bool pvponly;
        // offset 0xe702, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe703, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe704, size 0x1
        bool allowingameteamchange;
        // offset 0xe705, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe706, size 0x1
        bool classicmode;
        // offset 0xe707, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe708, size 0x1
        bool capdecay;
        // offset 0xe709, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe70a, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe70b, size 0x5
        uint:1 __pad[5];
    };

    // idx 32 members 9 size 0xe9f8
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe710
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xe9f0, size 0x1
        bool inuse;
        // offset 0xe9f1, size 0x1
        bool downloaded;
        // offset 0xe9f2, size 0x1
        bool isofficial;
        // offset 0xe9f3, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57bf0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57bd0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_482829e386f2d0e3"

version 48 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1150
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x11778
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xbe70
        character characters[11];
        // offset 0xff10, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x10780, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x11270, size 0x500
        string(16) customclassname[10];
        // offset 0x11770, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11771, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11772, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11773, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x13050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x12808, size 0x800
        string(16) customclassname[16];
        // offset 0x13008, size 0x10
        uint:10 killstreak1;
        // offset 0x13018, size 0x10
        uint:10 killstreak2;
        // offset 0x13028, size 0x10
        uint:10 killstreak3;
        // offset 0x13038, size 0x10
        uint:10 killstreak4;
        // offset 0x13048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x13049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1304a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1304b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x12b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x12388, size 0x800
        string(16) customclassname[16];
        // offset 0x12b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x12b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x12b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 267 size 0xe798
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe6d8, size 0x8
        uint:4 teamcount;
        // offset 0xe6e0, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe700, size 0x8
        uint:4 roundlimit;
        // offset 0xe708, size 0x8
        uint:2 charactercustomization;
        // offset 0xe710, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe718, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe720, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe730, size 0x1
        bool delayplayer;
        // offset 0xe731, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe732, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe733, size 0x1
        bool magic;
        // offset 0xe734, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe735, size 0x1
        bool draftenabled;
        // offset 0xe736, size 0x1
        bool droppedtagrespawn;
        // offset 0xe737, size 0x1
        bool voipkillershearvictim;
        // offset 0xe738, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe739, size 0x1
        bool allowdogs;
        // offset 0xe73a, size 0x1
        bool presetclassesperteam;
        // offset 0xe73b, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe73c, size 0x1
        bool hardcoremode;
        // offset 0xe73d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe73e, size 0x1
        bool silentplant;
        // offset 0xe73f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe740, size 0x1
        bool drafteveryround;
        // offset 0xe741, size 0x1
        bool timepauseswheninzone;
        // offset 0xe742, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe743, size 0x1
        bool scoreperplayer;
        // offset 0xe744, size 0x1
        bool kothmode;
        // offset 0xe745, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe746, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe747, size 0x1
        bool decayprogress;
        // offset 0xe748, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe749, size 0x1
        bool cumulativeroundscores;
        // offset 0xe74a, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe74b, size 0x1
        bool usespawngroups;
        // offset 0xe74c, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe74d, size 0x1
        bool allowbattlechatter;
        // offset 0xe74e, size 0x1
        bool fowrevealenabled;
        // offset 0xe74f, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe750, size 0x1
        bool headshotsonly;
        // offset 0xe751, size 0x1
        bool disablecontracts;
        // offset 0xe752, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe753, size 0x1
        bool allowannouncer;
        // offset 0xe754, size 0x1
        bool disallowaimslowdown;
        // offset 0xe755, size 0x1
        bool vehiclesenabled;
        // offset 0xe756, size 0x1
        bool decaycapturedzones;
        // offset 0xe757, size 0x1
        bool neutralzone;
        // offset 0xe758, size 0x1
        bool onlyheadshots;
        // offset 0xe759, size 0x1
        bool flagcapturecondition;
        // offset 0xe75a, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe75b, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe75c, size 0x1
        bool vehiclestimed;
        // offset 0xe75d, size 0x1
        bool pregamedraftenabled;
        // offset 0xe75e, size 0x1
        bool fogofwarminimap;
        // offset 0xe75f, size 0x1
        bool teamkillpointloss;
        // offset 0xe760, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe761, size 0x1
        bool perksenabled;
        // offset 0xe762, size 0x1
        bool allowmapscripting;
        // offset 0xe763, size 0x1
        bool robotshield;
        // offset 0xe764, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe765, size 0x1
        bool allowkillcam;
        // offset 0xe766, size 0x1
        bool disableattachments;
        // offset 0xe767, size 0x1
        bool disablecompass;
        // offset 0xe768, size 0x1
        bool disableweapondrop;
        // offset 0xe769, size 0x1
        bool escalationenabled;
        // offset 0xe76a, size 0x1
        bool disablecac;
        // offset 0xe76b, size 0x1
        bool disableclassselection;
        // offset 0xe76c, size 0x1
        bool autoteambalance;
        // offset 0xe76d, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe76e, size 0x1
        bool allowplayofthematch;
        // offset 0xe76f, size 0x1
        bool allowprone;
        // offset 0xe770, size 0x1
        bool scoreresetondeath;
        // offset 0xe771, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe772, size 0x1
        bool playerforcerespawn;
        // offset 0xe773, size 0x1
        bool multibomb;
        // offset 0xe774, size 0x1
        bool deathcircle;
        // offset 0xe775, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe776, size 0x1
        bool hash_69f74281cacb8a0f;
        // offset 0xe777, size 0x1
        bool deathpointloss;
        // offset 0xe778, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe779, size 0x1
        bool rebootplayers;
        // offset 0xe77a, size 0x1
        bool oldschoolmode;
        // offset 0xe77b, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe77c, size 0x1
        bool allowfinalkillcam;
        // offset 0xe77d, size 0x1
        bool allowspectating;
        // offset 0xe77e, size 0x1
        bool spawnselectenabled;
        // offset 0xe77f, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe780, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe781, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe782, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe783, size 0x1
        bool disallowprone;
        // offset 0xe784, size 0x1
        bool moveplayers;
        // offset 0xe785, size 0x1
        bool disabletacinsert;
        // offset 0xe786, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe787, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe788, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe789, size 0x1
        bool zmdifficulty;
        // offset 0xe78a, size 0x1
        bool pvponly;
        // offset 0xe78b, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe78c, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe78d, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe78e, size 0x1
        bool allowingameteamchange;
        // offset 0xe78f, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe790, size 0x1
        bool classicmode;
        // offset 0xe791, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe792, size 0x1
        bool capdecay;
        // offset 0xe793, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe794, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe795, size 0x3
        uint:1 __pad[3];
    };

    // idx 32 members 9 size 0xea80
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe798
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea78, size 0x1
        bool inuse;
        // offset 0xea79, size 0x1
        bool downloaded;
        // offset 0xea7a, size 0x1
        bool isofficial;
        // offset 0xea7b, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57f20
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57f00
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_b36a79b4ef100d29"

version 47 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x40
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x40
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x40
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0x1150
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x800
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x40
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x40
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 1 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x8
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 18 members 4 size 0xa50
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x800
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x808, size 0x148
        variant showcaseweapon;
        // offset 0x950, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x11778
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xbe70
        character characters[11];
        // offset 0xff10, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x10780, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x11270, size 0x500
        string(16) customclassname[10];
        // offset 0x11770, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11771, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x11772, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x11773, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x13050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x12808, size 0x800
        string(16) customclassname[16];
        // offset 0x13008, size 0x10
        uint:10 killstreak1;
        // offset 0x13018, size 0x10
        uint:10 killstreak2;
        // offset 0x13028, size 0x10
        uint:10 killstreak3;
        // offset 0x13038, size 0x10
        uint:10 killstreak4;
        // offset 0x13048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x13049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1304a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1304b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x12b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0x11500
        character characters[16];
        // offset 0x11588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x12388, size 0x800
        string(16) customclassname[16];
        // offset 0x12b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x12b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x12b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x12b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 266 size 0xe798
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe6d8, size 0x8
        uint:4 teamcount;
        // offset 0xe6e0, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe700, size 0x8
        uint:4 roundlimit;
        // offset 0xe708, size 0x8
        uint:2 charactercustomization;
        // offset 0xe710, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe718, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe720, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe730, size 0x1
        bool delayplayer;
        // offset 0xe731, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe732, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe733, size 0x1
        bool magic;
        // offset 0xe734, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe735, size 0x1
        bool draftenabled;
        // offset 0xe736, size 0x1
        bool droppedtagrespawn;
        // offset 0xe737, size 0x1
        bool voipkillershearvictim;
        // offset 0xe738, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe739, size 0x1
        bool allowdogs;
        // offset 0xe73a, size 0x1
        bool presetclassesperteam;
        // offset 0xe73b, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe73c, size 0x1
        bool hardcoremode;
        // offset 0xe73d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe73e, size 0x1
        bool silentplant;
        // offset 0xe73f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe740, size 0x1
        bool drafteveryround;
        // offset 0xe741, size 0x1
        bool timepauseswheninzone;
        // offset 0xe742, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe743, size 0x1
        bool scoreperplayer;
        // offset 0xe744, size 0x1
        bool kothmode;
        // offset 0xe745, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe746, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe747, size 0x1
        bool decayprogress;
        // offset 0xe748, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe749, size 0x1
        bool cumulativeroundscores;
        // offset 0xe74a, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe74b, size 0x1
        bool usespawngroups;
        // offset 0xe74c, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe74d, size 0x1
        bool allowbattlechatter;
        // offset 0xe74e, size 0x1
        bool fowrevealenabled;
        // offset 0xe74f, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe750, size 0x1
        bool headshotsonly;
        // offset 0xe751, size 0x1
        bool disablecontracts;
        // offset 0xe752, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe753, size 0x1
        bool allowannouncer;
        // offset 0xe754, size 0x1
        bool disallowaimslowdown;
        // offset 0xe755, size 0x1
        bool vehiclesenabled;
        // offset 0xe756, size 0x1
        bool decaycapturedzones;
        // offset 0xe757, size 0x1
        bool neutralzone;
        // offset 0xe758, size 0x1
        bool onlyheadshots;
        // offset 0xe759, size 0x1
        bool flagcapturecondition;
        // offset 0xe75a, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe75b, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe75c, size 0x1
        bool vehiclestimed;
        // offset 0xe75d, size 0x1
        bool pregamedraftenabled;
        // offset 0xe75e, size 0x1
        bool fogofwarminimap;
        // offset 0xe75f, size 0x1
        bool teamkillpointloss;
        // offset 0xe760, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe761, size 0x1
        bool perksenabled;
        // offset 0xe762, size 0x1
        bool allowmapscripting;
        // offset 0xe763, size 0x1
        bool robotshield;
        // offset 0xe764, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe765, size 0x1
        bool allowkillcam;
        // offset 0xe766, size 0x1
        bool disableattachments;
        // offset 0xe767, size 0x1
        bool disablecompass;
        // offset 0xe768, size 0x1
        bool disableweapondrop;
        // offset 0xe769, size 0x1
        bool escalationenabled;
        // offset 0xe76a, size 0x1
        bool disablecac;
        // offset 0xe76b, size 0x1
        bool disableclassselection;
        // offset 0xe76c, size 0x1
        bool autoteambalance;
        // offset 0xe76d, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe76e, size 0x1
        bool allowplayofthematch;
        // offset 0xe76f, size 0x1
        bool allowprone;
        // offset 0xe770, size 0x1
        bool scoreresetondeath;
        // offset 0xe771, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe772, size 0x1
        bool playerforcerespawn;
        // offset 0xe773, size 0x1
        bool multibomb;
        // offset 0xe774, size 0x1
        bool deathcircle;
        // offset 0xe775, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe776, size 0x1
        bool deathpointloss;
        // offset 0xe777, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe778, size 0x1
        bool rebootplayers;
        // offset 0xe779, size 0x1
        bool oldschoolmode;
        // offset 0xe77a, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe77b, size 0x1
        bool allowfinalkillcam;
        // offset 0xe77c, size 0x1
        bool allowspectating;
        // offset 0xe77d, size 0x1
        bool spawnselectenabled;
        // offset 0xe77e, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe77f, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe780, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe781, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe782, size 0x1
        bool disallowprone;
        // offset 0xe783, size 0x1
        bool moveplayers;
        // offset 0xe784, size 0x1
        bool disabletacinsert;
        // offset 0xe785, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe786, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe787, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe788, size 0x1
        bool zmdifficulty;
        // offset 0xe789, size 0x1
        bool pvponly;
        // offset 0xe78a, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe78b, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe78c, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe78d, size 0x1
        bool allowingameteamchange;
        // offset 0xe78e, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe78f, size 0x1
        bool classicmode;
        // offset 0xe790, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe791, size 0x1
        bool capdecay;
        // offset 0xe792, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe793, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe794, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xea80
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe798
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea78, size 0x1
        bool inuse;
        // offset 0xea79, size 0x1
        bool downloaded;
        // offset 0xea7a, size 0x1
        bool isofficial;
        // offset 0xea7b, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 8
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6,
        headgear, // 0x7
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57f20
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57f00
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_6199ebbe8b18f32a"

version 46 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x38
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x38
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x38
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0xf50
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x700
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x38
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 2 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x7
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
        // offset 0x7, size 0x1
        uint:1 __pad[1];
    };

    // idx 18 members 4 size 0x950
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10178
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xa870
        character characters[11];
        // offset 0xe910, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xf180, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0xfc70, size 0x500
        string(16) customclassname[10];
        // offset 0x10170, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10171, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10172, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10173, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x11050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x10808, size 0x800
        string(16) customclassname[16];
        // offset 0x11008, size 0x10
        uint:10 killstreak1;
        // offset 0x11018, size 0x10
        uint:10 killstreak2;
        // offset 0x11028, size 0x10
        uint:10 killstreak3;
        // offset 0x11038, size 0x10
        uint:10 killstreak4;
        // offset 0x11048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1104a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1104b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x10b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x10388, size 0x800
        string(16) customclassname[16];
        // offset 0x10b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 266 size 0xe798
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        fixed<8,6> scoreequipmentpowertimefactor;
        // offset 0xe6d8, size 0x8
        uint:4 teamcount;
        // offset 0xe6e0, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe700, size 0x8
        uint:4 roundlimit;
        // offset 0xe708, size 0x8
        uint:2 charactercustomization;
        // offset 0xe710, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe718, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe720, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe730, size 0x1
        bool delayplayer;
        // offset 0xe731, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe732, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe733, size 0x1
        bool magic;
        // offset 0xe734, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe735, size 0x1
        bool draftenabled;
        // offset 0xe736, size 0x1
        bool droppedtagrespawn;
        // offset 0xe737, size 0x1
        bool voipkillershearvictim;
        // offset 0xe738, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe739, size 0x1
        bool allowdogs;
        // offset 0xe73a, size 0x1
        bool presetclassesperteam;
        // offset 0xe73b, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe73c, size 0x1
        bool hardcoremode;
        // offset 0xe73d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe73e, size 0x1
        bool silentplant;
        // offset 0xe73f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe740, size 0x1
        bool drafteveryround;
        // offset 0xe741, size 0x1
        bool timepauseswheninzone;
        // offset 0xe742, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe743, size 0x1
        bool scoreperplayer;
        // offset 0xe744, size 0x1
        bool kothmode;
        // offset 0xe745, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe746, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe747, size 0x1
        bool decayprogress;
        // offset 0xe748, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe749, size 0x1
        bool cumulativeroundscores;
        // offset 0xe74a, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe74b, size 0x1
        bool usespawngroups;
        // offset 0xe74c, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe74d, size 0x1
        bool allowbattlechatter;
        // offset 0xe74e, size 0x1
        bool fowrevealenabled;
        // offset 0xe74f, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe750, size 0x1
        bool headshotsonly;
        // offset 0xe751, size 0x1
        bool disablecontracts;
        // offset 0xe752, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe753, size 0x1
        bool allowannouncer;
        // offset 0xe754, size 0x1
        bool disallowaimslowdown;
        // offset 0xe755, size 0x1
        bool vehiclesenabled;
        // offset 0xe756, size 0x1
        bool decaycapturedzones;
        // offset 0xe757, size 0x1
        bool neutralzone;
        // offset 0xe758, size 0x1
        bool onlyheadshots;
        // offset 0xe759, size 0x1
        bool flagcapturecondition;
        // offset 0xe75a, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe75b, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe75c, size 0x1
        bool vehiclestimed;
        // offset 0xe75d, size 0x1
        bool pregamedraftenabled;
        // offset 0xe75e, size 0x1
        bool fogofwarminimap;
        // offset 0xe75f, size 0x1
        bool teamkillpointloss;
        // offset 0xe760, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe761, size 0x1
        bool perksenabled;
        // offset 0xe762, size 0x1
        bool allowmapscripting;
        // offset 0xe763, size 0x1
        bool robotshield;
        // offset 0xe764, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe765, size 0x1
        bool allowkillcam;
        // offset 0xe766, size 0x1
        bool disableattachments;
        // offset 0xe767, size 0x1
        bool disablecompass;
        // offset 0xe768, size 0x1
        bool disableweapondrop;
        // offset 0xe769, size 0x1
        bool escalationenabled;
        // offset 0xe76a, size 0x1
        bool disablecac;
        // offset 0xe76b, size 0x1
        bool disableclassselection;
        // offset 0xe76c, size 0x1
        bool autoteambalance;
        // offset 0xe76d, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe76e, size 0x1
        bool allowplayofthematch;
        // offset 0xe76f, size 0x1
        bool allowprone;
        // offset 0xe770, size 0x1
        bool scoreresetondeath;
        // offset 0xe771, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe772, size 0x1
        bool playerforcerespawn;
        // offset 0xe773, size 0x1
        bool multibomb;
        // offset 0xe774, size 0x1
        bool deathcircle;
        // offset 0xe775, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe776, size 0x1
        bool deathpointloss;
        // offset 0xe777, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe778, size 0x1
        bool rebootplayers;
        // offset 0xe779, size 0x1
        bool oldschoolmode;
        // offset 0xe77a, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe77b, size 0x1
        bool allowfinalkillcam;
        // offset 0xe77c, size 0x1
        bool allowspectating;
        // offset 0xe77d, size 0x1
        bool spawnselectenabled;
        // offset 0xe77e, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe77f, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe780, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe781, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe782, size 0x1
        bool disallowprone;
        // offset 0xe783, size 0x1
        bool moveplayers;
        // offset 0xe784, size 0x1
        bool disabletacinsert;
        // offset 0xe785, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe786, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe787, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe788, size 0x1
        bool zmdifficulty;
        // offset 0xe789, size 0x1
        bool pvponly;
        // offset 0xe78a, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe78b, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe78c, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe78d, size 0x1
        bool allowingameteamchange;
        // offset 0xe78e, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe78f, size 0x1
        bool classicmode;
        // offset 0xe790, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe791, size 0x1
        bool capdecay;
        // offset 0xe792, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe793, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe794, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xea80
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe798
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea78, size 0x1
        bool inuse;
        // offset 0xea79, size 0x1
        bool downloaded;
        // offset 0xea7a, size 0x1
        bool isofficial;
        // offset 0xea7b, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 7
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57f20
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57f00
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_df78b5eb7fda9138"

version 45 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x38
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x38
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x38
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0xf50
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x700
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x38
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 2 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x7
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
        // offset 0x7, size 0x1
        uint:1 __pad[1];
    };

    // idx 18 members 4 size 0x950
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x100
        hash_22abd41674c242a4 hash_e5c77948998e49[32];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10178
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xa870
        character characters[11];
        // offset 0xe910, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xf180, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0xfc70, size 0x500
        string(16) customclassname[10];
        // offset 0x10170, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10171, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10172, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10173, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x11050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x10808, size 0x800
        string(16) customclassname[16];
        // offset 0x11008, size 0x10
        uint:10 killstreak1;
        // offset 0x11018, size 0x10
        uint:10 killstreak2;
        // offset 0x11028, size 0x10
        uint:10 killstreak3;
        // offset 0x11038, size 0x10
        uint:10 killstreak4;
        // offset 0x11048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1104a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1104b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x10b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x10388, size 0x800
        string(16) customclassname[16];
        // offset 0x10b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 265 size 0xe790
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        uint:4 teamcount;
        // offset 0xe6d8, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe6f8, size 0x8
        uint:4 roundlimit;
        // offset 0xe700, size 0x8
        uint:2 charactercustomization;
        // offset 0xe708, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe710, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe718, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe728, size 0x1
        bool delayplayer;
        // offset 0xe729, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe72a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe72b, size 0x1
        bool magic;
        // offset 0xe72c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe72d, size 0x1
        bool draftenabled;
        // offset 0xe72e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe72f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe730, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe731, size 0x1
        bool allowdogs;
        // offset 0xe732, size 0x1
        bool presetclassesperteam;
        // offset 0xe733, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe734, size 0x1
        bool hardcoremode;
        // offset 0xe735, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe736, size 0x1
        bool silentplant;
        // offset 0xe737, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe738, size 0x1
        bool drafteveryround;
        // offset 0xe739, size 0x1
        bool timepauseswheninzone;
        // offset 0xe73a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe73b, size 0x1
        bool scoreperplayer;
        // offset 0xe73c, size 0x1
        bool kothmode;
        // offset 0xe73d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe73e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe73f, size 0x1
        bool decayprogress;
        // offset 0xe740, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe741, size 0x1
        bool cumulativeroundscores;
        // offset 0xe742, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe743, size 0x1
        bool usespawngroups;
        // offset 0xe744, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe745, size 0x1
        bool allowbattlechatter;
        // offset 0xe746, size 0x1
        bool fowrevealenabled;
        // offset 0xe747, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe748, size 0x1
        bool headshotsonly;
        // offset 0xe749, size 0x1
        bool disablecontracts;
        // offset 0xe74a, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe74b, size 0x1
        bool allowannouncer;
        // offset 0xe74c, size 0x1
        bool disallowaimslowdown;
        // offset 0xe74d, size 0x1
        bool vehiclesenabled;
        // offset 0xe74e, size 0x1
        bool decaycapturedzones;
        // offset 0xe74f, size 0x1
        bool neutralzone;
        // offset 0xe750, size 0x1
        bool onlyheadshots;
        // offset 0xe751, size 0x1
        bool flagcapturecondition;
        // offset 0xe752, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe753, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe754, size 0x1
        bool vehiclestimed;
        // offset 0xe755, size 0x1
        bool pregamedraftenabled;
        // offset 0xe756, size 0x1
        bool fogofwarminimap;
        // offset 0xe757, size 0x1
        bool teamkillpointloss;
        // offset 0xe758, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe759, size 0x1
        bool perksenabled;
        // offset 0xe75a, size 0x1
        bool allowmapscripting;
        // offset 0xe75b, size 0x1
        bool robotshield;
        // offset 0xe75c, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe75d, size 0x1
        bool allowkillcam;
        // offset 0xe75e, size 0x1
        bool disableattachments;
        // offset 0xe75f, size 0x1
        bool disablecompass;
        // offset 0xe760, size 0x1
        bool disableweapondrop;
        // offset 0xe761, size 0x1
        bool escalationenabled;
        // offset 0xe762, size 0x1
        bool disablecac;
        // offset 0xe763, size 0x1
        bool disableclassselection;
        // offset 0xe764, size 0x1
        bool autoteambalance;
        // offset 0xe765, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe766, size 0x1
        bool allowplayofthematch;
        // offset 0xe767, size 0x1
        bool allowprone;
        // offset 0xe768, size 0x1
        bool scoreresetondeath;
        // offset 0xe769, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe76a, size 0x1
        bool playerforcerespawn;
        // offset 0xe76b, size 0x1
        bool multibomb;
        // offset 0xe76c, size 0x1
        bool deathcircle;
        // offset 0xe76d, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe76e, size 0x1
        bool deathpointloss;
        // offset 0xe76f, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe770, size 0x1
        bool rebootplayers;
        // offset 0xe771, size 0x1
        bool oldschoolmode;
        // offset 0xe772, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe773, size 0x1
        bool allowfinalkillcam;
        // offset 0xe774, size 0x1
        bool allowspectating;
        // offset 0xe775, size 0x1
        bool spawnselectenabled;
        // offset 0xe776, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe777, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe778, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe779, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe77a, size 0x1
        bool disallowprone;
        // offset 0xe77b, size 0x1
        bool moveplayers;
        // offset 0xe77c, size 0x1
        bool disabletacinsert;
        // offset 0xe77d, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe77e, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe77f, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe780, size 0x1
        bool zmdifficulty;
        // offset 0xe781, size 0x1
        bool pvponly;
        // offset 0xe782, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe783, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe784, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe785, size 0x1
        bool allowingameteamchange;
        // offset 0xe786, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe787, size 0x1
        bool classicmode;
        // offset 0xe788, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe789, size 0x1
        bool capdecay;
        // offset 0xe78a, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe78b, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe78c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xea78
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe790
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea70, size 0x1
        bool inuse;
        // offset 0xea71, size 0x1
        bool downloaded;
        // offset 0xea72, size 0x1
        bool isofficial;
        // offset 0xea73, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 7
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57ef0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57ed0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_b2ce47cb83c18304"

version 44 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x38
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x38
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x38
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0xf50
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x700
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x38
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 2 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x7
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
        // offset 0x7, size 0x1
        uint:1 __pad[1];
    };

    // idx 18 members 4 size 0x250
    struct wzcharacter {
        // offset 0x0, size 0x8
        uint:3 selectedoutfit;
        // offset 0x8, size 0xe0
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[4];
        // offset 0xe8, size 0x148
        variant showcaseweapon;
        // offset 0x230, size 0x20
        hash_22abd41674c242a4 hash_e5c77948998e49[4];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10178
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xa870
        character characters[11];
        // offset 0xe910, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xf180, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0xfc70, size 0x500
        string(16) customclassname[10];
        // offset 0x10170, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10171, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10172, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10173, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x11050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x10808, size 0x800
        string(16) customclassname[16];
        // offset 0x11008, size 0x10
        uint:10 killstreak1;
        // offset 0x11018, size 0x10
        uint:10 killstreak2;
        // offset 0x11028, size 0x10
        uint:10 killstreak3;
        // offset 0x11038, size 0x10
        uint:10 killstreak4;
        // offset 0x11048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1104a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1104b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x10b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x10388, size 0x800
        string(16) customclassname[16];
        // offset 0x10b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 265 size 0xe790
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        uint:4 teamcount;
        // offset 0xe6d8, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe6f8, size 0x8
        uint:4 roundlimit;
        // offset 0xe700, size 0x8
        uint:2 charactercustomization;
        // offset 0xe708, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe710, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe718, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe728, size 0x1
        bool delayplayer;
        // offset 0xe729, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe72a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe72b, size 0x1
        bool magic;
        // offset 0xe72c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe72d, size 0x1
        bool draftenabled;
        // offset 0xe72e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe72f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe730, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe731, size 0x1
        bool allowdogs;
        // offset 0xe732, size 0x1
        bool presetclassesperteam;
        // offset 0xe733, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe734, size 0x1
        bool hardcoremode;
        // offset 0xe735, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe736, size 0x1
        bool silentplant;
        // offset 0xe737, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe738, size 0x1
        bool drafteveryround;
        // offset 0xe739, size 0x1
        bool timepauseswheninzone;
        // offset 0xe73a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe73b, size 0x1
        bool scoreperplayer;
        // offset 0xe73c, size 0x1
        bool kothmode;
        // offset 0xe73d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe73e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe73f, size 0x1
        bool decayprogress;
        // offset 0xe740, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe741, size 0x1
        bool cumulativeroundscores;
        // offset 0xe742, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe743, size 0x1
        bool usespawngroups;
        // offset 0xe744, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe745, size 0x1
        bool allowbattlechatter;
        // offset 0xe746, size 0x1
        bool fowrevealenabled;
        // offset 0xe747, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe748, size 0x1
        bool headshotsonly;
        // offset 0xe749, size 0x1
        bool disablecontracts;
        // offset 0xe74a, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe74b, size 0x1
        bool allowannouncer;
        // offset 0xe74c, size 0x1
        bool disallowaimslowdown;
        // offset 0xe74d, size 0x1
        bool vehiclesenabled;
        // offset 0xe74e, size 0x1
        bool decaycapturedzones;
        // offset 0xe74f, size 0x1
        bool neutralzone;
        // offset 0xe750, size 0x1
        bool onlyheadshots;
        // offset 0xe751, size 0x1
        bool flagcapturecondition;
        // offset 0xe752, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe753, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe754, size 0x1
        bool vehiclestimed;
        // offset 0xe755, size 0x1
        bool pregamedraftenabled;
        // offset 0xe756, size 0x1
        bool fogofwarminimap;
        // offset 0xe757, size 0x1
        bool teamkillpointloss;
        // offset 0xe758, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe759, size 0x1
        bool perksenabled;
        // offset 0xe75a, size 0x1
        bool allowmapscripting;
        // offset 0xe75b, size 0x1
        bool robotshield;
        // offset 0xe75c, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe75d, size 0x1
        bool allowkillcam;
        // offset 0xe75e, size 0x1
        bool disableattachments;
        // offset 0xe75f, size 0x1
        bool disablecompass;
        // offset 0xe760, size 0x1
        bool disableweapondrop;
        // offset 0xe761, size 0x1
        bool escalationenabled;
        // offset 0xe762, size 0x1
        bool disablecac;
        // offset 0xe763, size 0x1
        bool disableclassselection;
        // offset 0xe764, size 0x1
        bool autoteambalance;
        // offset 0xe765, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe766, size 0x1
        bool allowplayofthematch;
        // offset 0xe767, size 0x1
        bool allowprone;
        // offset 0xe768, size 0x1
        bool scoreresetondeath;
        // offset 0xe769, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe76a, size 0x1
        bool playerforcerespawn;
        // offset 0xe76b, size 0x1
        bool multibomb;
        // offset 0xe76c, size 0x1
        bool deathcircle;
        // offset 0xe76d, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe76e, size 0x1
        bool deathpointloss;
        // offset 0xe76f, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe770, size 0x1
        bool rebootplayers;
        // offset 0xe771, size 0x1
        bool oldschoolmode;
        // offset 0xe772, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe773, size 0x1
        bool allowfinalkillcam;
        // offset 0xe774, size 0x1
        bool allowspectating;
        // offset 0xe775, size 0x1
        bool spawnselectenabled;
        // offset 0xe776, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe777, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe778, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe779, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe77a, size 0x1
        bool disallowprone;
        // offset 0xe77b, size 0x1
        bool moveplayers;
        // offset 0xe77c, size 0x1
        bool disabletacinsert;
        // offset 0xe77d, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe77e, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe77f, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe780, size 0x1
        bool zmdifficulty;
        // offset 0xe781, size 0x1
        bool pvponly;
        // offset 0xe782, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe783, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe784, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe785, size 0x1
        bool allowingameteamchange;
        // offset 0xe786, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe787, size 0x1
        bool classicmode;
        // offset 0xe788, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe789, size 0x1
        bool capdecay;
        // offset 0xe78a, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe78b, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe78c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xea78
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe790
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea70, size 0x1
        bool inuse;
        // offset 0xea71, size 0x1
        bool downloaded;
        // offset 0xea72, size 0x1
        bool isofficial;
        // offset 0xea73, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 7
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57ef0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57ed0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_5cf9d9471d449b23"

version 43 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 1 size 0x1
    struct hash_487a06a811f1cadc {
        // offset 0x0, size 0x1
        bool markedold;
    };

    // idx 11 members 1 size 0x8
    struct hash_52f9ee07d542f724 {
        // offset 0x0, size 0x8
        hash_487a06a811f1cadc items[8];
    };

    // idx 12 members 1 size 0x38
    struct hash_380775ab8e293fe7 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 13 members 1 size 0x38
    struct hash_32aeae7311d2cd9b {
        // offset 0x0, size 0x38
        uint:4 hash_212bcdfa518cc913[hash_5ab26f037efe82c];
    };

    // idx 14 members 4 size 0xf50
    struct character {
        // offset 0x0, size 0x8
        uint:6 selectedoutfit;
        // offset 0x8, size 0x700
        hash_380775ab8e293fe7 hash_b56427620aa34e1[32];
        // offset 0x708, size 0x148
        variant showcaseweapon;
        // offset 0x850, size 0x700
        hash_32aeae7311d2cd9b hash_e5c77948998e49[32];
    };

    // idx 15 members 1 size 0x1
    struct hash_7cd9cffcae5b8043 {
        // offset 0x0, size 0x1
        hash_487a06a811f1cadc items[1];
    };

    // idx 16 members 1 size 0x38
    struct hash_3cff0c833d630ba2 {
        // offset 0x0, size 0x38
        hash_52f9ee07d542f724 parts[hash_5ab26f037efe82c];
    };

    // idx 17 members 2 size 0x8
    struct hash_22abd41674c242a4 {
        // offset 0x0, size 0x7
        bool hash_212bcdfa518cc913[hash_5ab26f037efe82c];
        // offset 0x7, size 0x1
        uint:1 __pad[1];
    };

    // idx 18 members 5 size 0x190
    struct wzcharacter {
        // offset 0x0, size 0x38
        hash_3cff0c833d630ba2 hash_b56427620aa34e1[1];
        // offset 0x38, size 0x148
        variant showcaseweapon;
        // offset 0x180, size 0x8
        hash_22abd41674c242a4 hash_e5c77948998e49[1];
        // offset 0x188, size 0x1
        bool selectedoutfit;
        // offset 0x189, size 0x7
        uint:1 __pad[7];
    };

    // idx 19 members 4 size 0x58
    struct charactercontext {
        // offset 0x0, size 0x20
        uint characterindex;
        // offset 0x20, size 0x8
        uint:2 selectedgender;
        // offset 0x28, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0x38, size 0x20
        uint charactermode;
    };

    // idx 20 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 21 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 22 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 23 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 24 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 25 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 26 members 13 size 0x10178
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0x58
        charactercontext charactercontext;
        // offset 0x4080, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x40a0, size 0xa870
        character characters[11];
        // offset 0xe910, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0xf180, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0xfc70, size 0x500
        string(16) customclassname[10];
        // offset 0x10170, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10171, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10172, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10173, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 14 size 0x11050
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x10808, size 0x800
        string(16) customclassname[16];
        // offset 0x11008, size 0x10
        uint:10 killstreak1;
        // offset 0x11018, size 0x10
        uint:10 killstreak2;
        // offset 0x11028, size 0x10
        uint:10 killstreak3;
        // offset 0x11038, size 0x10
        uint:10 killstreak4;
        // offset 0x11048, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x11049, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1104a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1104b, size 0x5
        uint:1 __pad[5];
    };

    // idx 28 members 10 size 0x10b90
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x58
        charactercontext charactercontext;
        // offset 0x68, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x88, size 0xf500
        character characters[16];
        // offset 0xf588, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x10388, size 0x800
        string(16) customclassname[16];
        // offset 0x10b88, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x10b89, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x10b8a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x10b8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 29 members 17 size 0x1108
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc0, size 0x8
        byte herogadget;
        // offset 0xbc8, size 0x500
        string(16) customclassname[10];
        // offset 0x10c8, size 0x8
        byte heroweapon;
        // offset 0x10d0, size 0x8
        byte killstreak1;
        // offset 0x10d8, size 0x8
        byte killstreak2;
        // offset 0x10e0, size 0x8
        byte killstreak3;
        // offset 0x10e8, size 0x8
        byte killstreak4;
        // offset 0x10f0, size 0x8
        byte killstreak5;
        // offset 0x10f8, size 0x8
        byte killstreak6;
        // offset 0x1100, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1101, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1102, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1103, size 0x5
        uint:1 __pad[5];
    };

    // idx 30 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 31 members 265 size 0xe790
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3318
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe698, size 0x8
        uint:7 drafttime;
        // offset 0xe6a0, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6a8, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6b0, size 0x8
        uint:4 throwscore;
        // offset 0xe6b8, size 0x8
        uint:4 deposittime;
        // offset 0xe6c0, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6d0, size 0x8
        uint:4 teamcount;
        // offset 0xe6d8, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe6f8, size 0x8
        uint:4 roundlimit;
        // offset 0xe700, size 0x8
        uint:2 charactercustomization;
        // offset 0xe708, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe710, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe718, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe728, size 0x1
        bool delayplayer;
        // offset 0xe729, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe72a, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe72b, size 0x1
        bool magic;
        // offset 0xe72c, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe72d, size 0x1
        bool draftenabled;
        // offset 0xe72e, size 0x1
        bool droppedtagrespawn;
        // offset 0xe72f, size 0x1
        bool voipkillershearvictim;
        // offset 0xe730, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe731, size 0x1
        bool allowdogs;
        // offset 0xe732, size 0x1
        bool presetclassesperteam;
        // offset 0xe733, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe734, size 0x1
        bool hardcoremode;
        // offset 0xe735, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe736, size 0x1
        bool silentplant;
        // offset 0xe737, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe738, size 0x1
        bool drafteveryround;
        // offset 0xe739, size 0x1
        bool timepauseswheninzone;
        // offset 0xe73a, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe73b, size 0x1
        bool scoreperplayer;
        // offset 0xe73c, size 0x1
        bool kothmode;
        // offset 0xe73d, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe73e, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe73f, size 0x1
        bool decayprogress;
        // offset 0xe740, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe741, size 0x1
        bool cumulativeroundscores;
        // offset 0xe742, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe743, size 0x1
        bool usespawngroups;
        // offset 0xe744, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe745, size 0x1
        bool allowbattlechatter;
        // offset 0xe746, size 0x1
        bool fowrevealenabled;
        // offset 0xe747, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe748, size 0x1
        bool headshotsonly;
        // offset 0xe749, size 0x1
        bool disablecontracts;
        // offset 0xe74a, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe74b, size 0x1
        bool allowannouncer;
        // offset 0xe74c, size 0x1
        bool disallowaimslowdown;
        // offset 0xe74d, size 0x1
        bool vehiclesenabled;
        // offset 0xe74e, size 0x1
        bool decaycapturedzones;
        // offset 0xe74f, size 0x1
        bool neutralzone;
        // offset 0xe750, size 0x1
        bool onlyheadshots;
        // offset 0xe751, size 0x1
        bool flagcapturecondition;
        // offset 0xe752, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe753, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe754, size 0x1
        bool vehiclestimed;
        // offset 0xe755, size 0x1
        bool pregamedraftenabled;
        // offset 0xe756, size 0x1
        bool fogofwarminimap;
        // offset 0xe757, size 0x1
        bool teamkillpointloss;
        // offset 0xe758, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe759, size 0x1
        bool perksenabled;
        // offset 0xe75a, size 0x1
        bool allowmapscripting;
        // offset 0xe75b, size 0x1
        bool robotshield;
        // offset 0xe75c, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe75d, size 0x1
        bool allowkillcam;
        // offset 0xe75e, size 0x1
        bool disableattachments;
        // offset 0xe75f, size 0x1
        bool disablecompass;
        // offset 0xe760, size 0x1
        bool disableweapondrop;
        // offset 0xe761, size 0x1
        bool escalationenabled;
        // offset 0xe762, size 0x1
        bool disablecac;
        // offset 0xe763, size 0x1
        bool disableclassselection;
        // offset 0xe764, size 0x1
        bool autoteambalance;
        // offset 0xe765, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe766, size 0x1
        bool allowplayofthematch;
        // offset 0xe767, size 0x1
        bool allowprone;
        // offset 0xe768, size 0x1
        bool scoreresetondeath;
        // offset 0xe769, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe76a, size 0x1
        bool playerforcerespawn;
        // offset 0xe76b, size 0x1
        bool multibomb;
        // offset 0xe76c, size 0x1
        bool deathcircle;
        // offset 0xe76d, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe76e, size 0x1
        bool deathpointloss;
        // offset 0xe76f, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe770, size 0x1
        bool rebootplayers;
        // offset 0xe771, size 0x1
        bool oldschoolmode;
        // offset 0xe772, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe773, size 0x1
        bool allowfinalkillcam;
        // offset 0xe774, size 0x1
        bool allowspectating;
        // offset 0xe775, size 0x1
        bool spawnselectenabled;
        // offset 0xe776, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe777, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe778, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe779, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe77a, size 0x1
        bool disallowprone;
        // offset 0xe77b, size 0x1
        bool moveplayers;
        // offset 0xe77c, size 0x1
        bool disabletacinsert;
        // offset 0xe77d, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe77e, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe77f, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe780, size 0x1
        bool zmdifficulty;
        // offset 0xe781, size 0x1
        bool pvponly;
        // offset 0xe782, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe783, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe784, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe785, size 0x1
        bool allowingameteamchange;
        // offset 0xe786, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe787, size 0x1
        bool classicmode;
        // offset 0xe788, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe789, size 0x1
        bool capdecay;
        // offset 0xe78a, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe78b, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe78c, size 0x4
        uint:1 __pad[4];
    };

    // idx 32 members 9 size 0xea78
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe790
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea70, size 0x1
        bool inuse;
        // offset 0xea71, size 0x1
        bool downloaded;
        // offset 0xea72, size 0x1
        bool isofficial;
        // offset 0xea73, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 7
    enum hash_5ab26f037efe82c {
        arms, // 0x0,
        head, // 0x1,
        palette, // 0x2,
        legs, // 0x3,
        decals, // 0x4,
        war_paint, // 0x5,
        torso, // 0x6
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57ef0
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57ed0
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_9b0d82bbd48d3325"

version 42 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 4 size 0x20
    struct characteritem {
        // offset 0x0, size 0x18
        uint:3 colors[3];
        // offset 0x18, size 0x1
        bool markedold;
        // offset 0x19, size 0x1
        bool unlocked;
        // offset 0x1a, size 0x6
        uint:1 __pad[6];
    };

    // idx 11 members 1 size 0x780
    struct hash_74e0cb6ea60c0207 {
        // offset 0x0, size 0x780
        characteritem items[60];
    };

    // idx 12 members 4 size 0x1f70
    struct character {
        // offset 0x0, size 0x1e00
        hash_74e0cb6ea60c0207 itemlist[hash_5446546f71ee6cdf];
        // offset 0x1e00, size 0x148
        variant showcaseweapon;
        // offset 0x1f48, size 0x20
        uint:6 selectedcharacteritems[hash_5446546f71ee6cdf];
        // offset 0x1f68, size 0x8
        uint:2 selectedloadouttype;
    };

    // idx 13 members 2 size 0x40
    struct mix_s {
        // offset 0x0, size 0x20
        uint modelindex;
        // offset 0x20, size 0x20
        float weight;
    };

    // idx 14 members 1 size 0x100
    struct hash_508eaeb5f638a293 {
        // offset 0x0, size 0x100
        mix_s mix[4];
    };

    // idx 15 members 2 size 0x510
    struct hash_5b3226f1816b17a {
        // offset 0x0, size 0x500
        hash_508eaeb5f638a293 hash_506cb6b5f61bc9c5[5];
        // offset 0x500, size 0x10
        uint:5 materialindex[2];
    };

    // idx 16 members 5 size 0xa78
    struct charactercontext {
        // offset 0x0, size 0xa20
        hash_5b3226f1816b17a hash_50ee7b4f9ae0c518[hash_7f3085f3cff25119];
        // offset 0xa20, size 0x20
        uint characterindex;
        // offset 0xa40, size 0x8
        uint:2 selectedgender;
        // offset 0xa48, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0xa58, size 0x20
        uint charactermode;
    };

    // idx 17 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:8 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 14 size 0x1bd00
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0xa78
        charactercontext charactercontext;
        // offset 0x4aa0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x4ac0, size 0x159d0
        character characters[11];
        // offset 0x1a490, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1ad00, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x1ad08, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1b7f8, size 0x500
        string(16) customclassname[10];
        // offset 0x1bcf8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1bcf9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1bcfa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1bcfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 15 size 0x21c78
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0xa78
        charactercontext charactercontext;
        // offset 0xa88, size 0x20
        uint firstselectedcharacterindex;
        // offset 0xaa8, size 0x1f700
        character characters[16];
        // offset 0x201a8, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x201b0, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x21430, size 0x800
        string(16) customclassname[16];
        // offset 0x21c30, size 0x10
        uint:10 killstreak1;
        // offset 0x21c40, size 0x10
        uint:10 killstreak2;
        // offset 0x21c50, size 0x10
        uint:10 killstreak3;
        // offset 0x21c60, size 0x10
        uint:10 killstreak4;
        // offset 0x21c70, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x21c71, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x21c72, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x21c73, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 11 size 0x217b8
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0xa78
        charactercontext charactercontext;
        // offset 0xa88, size 0x20
        uint firstselectedcharacterindex;
        // offset 0xaa8, size 0x1f700
        character characters[16];
        // offset 0x201a8, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x201b0, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x20fb0, size 0x800
        string(16) customclassname[16];
        // offset 0x217b0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x217b1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x217b2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x217b3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 18 size 0x1110
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x38, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc8, size 0x8
        byte herogadget;
        // offset 0xbd0, size 0x500
        string(16) customclassname[10];
        // offset 0x10d0, size 0x8
        byte heroweapon;
        // offset 0x10d8, size 0x8
        byte killstreak1;
        // offset 0x10e0, size 0x8
        byte killstreak2;
        // offset 0x10e8, size 0x8
        byte killstreak3;
        // offset 0x10f0, size 0x8
        byte killstreak4;
        // offset 0x10f8, size 0x8
        byte killstreak5;
        // offset 0x1100, size 0x8
        byte killstreak6;
        // offset 0x1108, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1109, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x110a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x110b, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe7a8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3330
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe6b0, size 0x8
        uint:7 drafttime;
        // offset 0xe6b8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6c0, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6c8, size 0x8
        uint:4 throwscore;
        // offset 0xe6d0, size 0x8
        uint:4 deposittime;
        // offset 0xe6d8, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6e8, size 0x8
        uint:4 teamcount;
        // offset 0xe6f0, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe710, size 0x8
        uint:4 roundlimit;
        // offset 0xe718, size 0x8
        uint:2 charactercustomization;
        // offset 0xe720, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe728, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe730, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe740, size 0x1
        bool delayplayer;
        // offset 0xe741, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe742, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe743, size 0x1
        bool magic;
        // offset 0xe744, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe745, size 0x1
        bool draftenabled;
        // offset 0xe746, size 0x1
        bool droppedtagrespawn;
        // offset 0xe747, size 0x1
        bool voipkillershearvictim;
        // offset 0xe748, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe749, size 0x1
        bool allowdogs;
        // offset 0xe74a, size 0x1
        bool presetclassesperteam;
        // offset 0xe74b, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe74c, size 0x1
        bool hardcoremode;
        // offset 0xe74d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe74e, size 0x1
        bool silentplant;
        // offset 0xe74f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe750, size 0x1
        bool drafteveryround;
        // offset 0xe751, size 0x1
        bool timepauseswheninzone;
        // offset 0xe752, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe753, size 0x1
        bool scoreperplayer;
        // offset 0xe754, size 0x1
        bool kothmode;
        // offset 0xe755, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe756, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe757, size 0x1
        bool decayprogress;
        // offset 0xe758, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe759, size 0x1
        bool cumulativeroundscores;
        // offset 0xe75a, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe75b, size 0x1
        bool usespawngroups;
        // offset 0xe75c, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe75d, size 0x1
        bool allowbattlechatter;
        // offset 0xe75e, size 0x1
        bool fowrevealenabled;
        // offset 0xe75f, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe760, size 0x1
        bool headshotsonly;
        // offset 0xe761, size 0x1
        bool disablecontracts;
        // offset 0xe762, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe763, size 0x1
        bool allowannouncer;
        // offset 0xe764, size 0x1
        bool disallowaimslowdown;
        // offset 0xe765, size 0x1
        bool vehiclesenabled;
        // offset 0xe766, size 0x1
        bool decaycapturedzones;
        // offset 0xe767, size 0x1
        bool neutralzone;
        // offset 0xe768, size 0x1
        bool onlyheadshots;
        // offset 0xe769, size 0x1
        bool flagcapturecondition;
        // offset 0xe76a, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe76b, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe76c, size 0x1
        bool vehiclestimed;
        // offset 0xe76d, size 0x1
        bool pregamedraftenabled;
        // offset 0xe76e, size 0x1
        bool fogofwarminimap;
        // offset 0xe76f, size 0x1
        bool teamkillpointloss;
        // offset 0xe770, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe771, size 0x1
        bool perksenabled;
        // offset 0xe772, size 0x1
        bool allowmapscripting;
        // offset 0xe773, size 0x1
        bool robotshield;
        // offset 0xe774, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe775, size 0x1
        bool allowkillcam;
        // offset 0xe776, size 0x1
        bool disableattachments;
        // offset 0xe777, size 0x1
        bool disablecompass;
        // offset 0xe778, size 0x1
        bool disableweapondrop;
        // offset 0xe779, size 0x1
        bool escalationenabled;
        // offset 0xe77a, size 0x1
        bool disablecac;
        // offset 0xe77b, size 0x1
        bool disableclassselection;
        // offset 0xe77c, size 0x1
        bool autoteambalance;
        // offset 0xe77d, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe77e, size 0x1
        bool allowplayofthematch;
        // offset 0xe77f, size 0x1
        bool allowprone;
        // offset 0xe780, size 0x1
        bool scoreresetondeath;
        // offset 0xe781, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe782, size 0x1
        bool playerforcerespawn;
        // offset 0xe783, size 0x1
        bool multibomb;
        // offset 0xe784, size 0x1
        bool deathcircle;
        // offset 0xe785, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe786, size 0x1
        bool deathpointloss;
        // offset 0xe787, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe788, size 0x1
        bool rebootplayers;
        // offset 0xe789, size 0x1
        bool oldschoolmode;
        // offset 0xe78a, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe78b, size 0x1
        bool allowfinalkillcam;
        // offset 0xe78c, size 0x1
        bool allowspectating;
        // offset 0xe78d, size 0x1
        bool spawnselectenabled;
        // offset 0xe78e, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe78f, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe790, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe791, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe792, size 0x1
        bool disallowprone;
        // offset 0xe793, size 0x1
        bool moveplayers;
        // offset 0xe794, size 0x1
        bool disabletacinsert;
        // offset 0xe795, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe796, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe797, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe798, size 0x1
        bool zmdifficulty;
        // offset 0xe799, size 0x1
        bool pvponly;
        // offset 0xe79a, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe79b, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe79c, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe79d, size 0x1
        bool allowingameteamchange;
        // offset 0xe79e, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe79f, size 0x1
        bool classicmode;
        // offset 0xe7a0, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe7a1, size 0x1
        bool capdecay;
        // offset 0xe7a2, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe7a3, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe7a4, size 0x4
        uint:1 __pad[4];
    };

    // idx 29 members 9 size 0xea90
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe7a8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea88, size 0x1
        bool inuse;
        // offset 0xea89, size 0x1
        bool downloaded;
        // offset 0xea8a, size 0x1
        bool isofficial;
        // offset 0xea8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 4
    enum hash_5446546f71ee6cdf {
        hash_2e29a4cc7409d939, // 0x0,
        helmet, // 0x1,
        body, // 0x2,
        hash_7d030d1323187739, // 0x3
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57f80
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57f60
    hash_5d6e6de9167f1a56 customgames[6];
}

/////////////////////////////////////////////////
// gamedata/ddl/generated/custom_games.ddl
// metatable "hash_809976ab92ffb4d7"

version 41 {
    // idx 1 members 26 size 0xf0
    struct emblemlayer {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:9 icon;
        // offset 0x20, size 0x10
        uint:11 posx;
        // offset 0x30, size 0x10
        uint:11 posy;
        // offset 0x40, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x48, size 0x8
        uint:8 alpha;
        // offset 0x50, size 0x10
        uint:9 angle;
        // offset 0x60, size 0x8
        uint:8 blue1;
        // offset 0x68, size 0x8
        uint:8 green;
        // offset 0x70, size 0x8
        uint:7 gradientfill;
        // offset 0x78, size 0x8
        uint:6 groupindex;
        // offset 0x80, size 0x10
        uint:9 gradientangle;
        // offset 0x90, size 0x8
        uint:8 alpha1;
        // offset 0x98, size 0x8
        uint:8 green1;
        // offset 0xa0, size 0x10
        uint:9 materialangle;
        // offset 0xb0, size 0x10
        uint:11 scalex;
        // offset 0xc0, size 0x10
        uint:11 scaley;
        // offset 0xd0, size 0x8
        uint:8 materialscalex;
        // offset 0xd8, size 0x8
        uint:8 materialscaley;
        // offset 0xe0, size 0x8
        uint:7 materialid;
        // offset 0xe8, size 0x1
        bool flip;
        // offset 0xe9, size 0x1
        bool blend;
        // offset 0xea, size 0x1
        bool gradienttype;
        // offset 0xeb, size 0x1
        bool outline;
        // offset 0xec, size 0x4
        uint:1 __pad[4];
    };

    // idx 2 members 26 size 0xd8
    struct hash_24f699c797bc9492 {
        // offset 0x0, size 0x8
        uint:8 red;
        // offset 0x8, size 0x8
        uint:8 blue;
        // offset 0x10, size 0x10
        uint:11 posx;
        // offset 0x20, size 0x10
        uint:11 posy;
        // offset 0x30, size 0x8
        uint:8 hash_4cf0321fbfe5f277;
        // offset 0x38, size 0x8
        uint:8 alpha;
        // offset 0x40, size 0x10
        uint:9 angle;
        // offset 0x50, size 0x8
        uint:8 blue1;
        // offset 0x58, size 0x8
        uint:8 green;
        // offset 0x60, size 0x8
        uint:7 gradientfill;
        // offset 0x68, size 0x10
        uint:9 gradientangle;
        // offset 0x78, size 0x8
        uint:8 alpha1;
        // offset 0x80, size 0x8
        uint:8 green1;
        // offset 0x88, size 0x10
        uint:9 materialangle;
        // offset 0x98, size 0x10
        uint:11 scalex;
        // offset 0xa8, size 0x10
        uint:11 scaley;
        // offset 0xb8, size 0x8
        uint:8 materialscalex;
        // offset 0xc0, size 0x8
        uint:8 materialscaley;
        // offset 0xc8, size 0x8
        uint:7 materialid;
        // offset 0xd0, size 0x1
        bool flip;
        // offset 0xd1, size 0x1
        bool blend;
        // offset 0xd2, size 0x1
        bool gradienttype;
        // offset 0xd3, size 0x1
        bool groupedlook;
        // offset 0xd4, size 0x1
        bool outline;
        // offset 0xd5, size 0x1
        bool isgrouped;
        // offset 0xd6, size 0x2
        uint:1 __pad[2];
    };

    // idx 3 members 2 size 0x4548
    struct hash_62325f44a788da78 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0x948
        hash_24f699c797bc9492 groups[11];
    };

    // idx 4 members 2 size 0x3cd8
    struct hash_6ac42a2c4c8f3b10 {
        // offset 0x0, size 0x3c00
        emblemlayer layer[64];
        // offset 0x3c00, size 0xd8
        hash_24f699c797bc9492 groups[1];
    };

    // idx 5 members 2 size 0x4558
    struct emblem {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
        // offset 0x4548, size 0x10
        uint:10 background;
    };

    // idx 6 members 1 size 0x4548
    struct hash_4e00feaf81ba241c {
        // offset 0x0, size 0x4548
        hash_62325f44a788da78 layerinfo;
    };

    // idx 7 members 1 size 0x8a90
    struct paintshop {
        // offset 0x0, size 0x8a90
        hash_4e00feaf81ba241c view[hash_1d2ac7bb711046eb];
    };

    // idx 8 members 6 size 0x8b60
    struct weaponpaintjob {
        // offset 0x0, size 0x8a90
        paintshop paintjob;
        // offset 0x8a90, size 0x20
        uint createtime;
        // offset 0x8ab0, size 0x80
        string(16) paintjobname;
        // offset 0x8b30, size 0x8
        int:2 readonly;
        // offset 0x8b38, size 0x8
        byte weaponindex;
        // offset 0x8b40, size 0x20
        int sortindex;
    };

    // idx 9 members 10 size 0x148
    struct variant {
        // offset 0x0, size 0x20
        uint createtime;
        // offset 0x20, size 0x8
        int:8 paintjobslot;
        // offset 0x28, size 0x10
        int:11 variantindex;
        // offset 0x38, size 0x40
        int:8 attachment[8];
        // offset 0x78, size 0x80
        string(16) variantname;
        // offset 0xf8, size 0x8
        int:2 readonly;
        // offset 0x100, size 0x10
        int:11 reticleindex;
        // offset 0x110, size 0x10
        int:9 weaponindex;
        // offset 0x120, size 0x8
        byte camoindex;
        // offset 0x128, size 0x20
        int sortindex;
    };

    // idx 10 members 4 size 0x20
    struct characteritem {
        // offset 0x0, size 0x18
        uint:3 colors[3];
        // offset 0x18, size 0x1
        bool markedold;
        // offset 0x19, size 0x1
        bool unlocked;
        // offset 0x1a, size 0x6
        uint:1 __pad[6];
    };

    // idx 11 members 1 size 0x780
    struct hash_74e0cb6ea60c0207 {
        // offset 0x0, size 0x780
        characteritem items[60];
    };

    // idx 12 members 4 size 0x1f70
    struct character {
        // offset 0x0, size 0x1e00
        hash_74e0cb6ea60c0207 itemlist[hash_5446546f71ee6cdf];
        // offset 0x1e00, size 0x148
        variant showcaseweapon;
        // offset 0x1f48, size 0x20
        uint:6 selectedcharacteritems[hash_5446546f71ee6cdf];
        // offset 0x1f68, size 0x8
        uint:2 selectedloadouttype;
    };

    // idx 13 members 2 size 0x40
    struct mix_s {
        // offset 0x0, size 0x20
        uint modelindex;
        // offset 0x20, size 0x20
        float weight;
    };

    // idx 14 members 1 size 0x100
    struct hash_508eaeb5f638a293 {
        // offset 0x0, size 0x100
        mix_s mix[4];
    };

    // idx 15 members 2 size 0x510
    struct hash_5b3226f1816b17a {
        // offset 0x0, size 0x500
        hash_508eaeb5f638a293 hash_506cb6b5f61bc9c5[5];
        // offset 0x500, size 0x10
        uint:5 materialindex[2];
    };

    // idx 16 members 5 size 0xa78
    struct charactercontext {
        // offset 0x0, size 0xa20
        hash_5b3226f1816b17a hash_50ee7b4f9ae0c518[hash_7f3085f3cff25119];
        // offset 0xa20, size 0x20
        uint characterindex;
        // offset 0xa40, size 0x8
        uint:2 selectedgender;
        // offset 0xa48, size 0x10
        uint:5 selectedheadindex[hash_7f3085f3cff25119];
        // offset 0xa58, size 0x20
        uint charactermode;
    };

    // idx 17 members 5 size 0x60
    struct hash_2c79abcce61676aa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:6 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 18 members 5 size 0x60
    struct hash_20631b664715b1fa {
        // offset 0x0, size 0x8
        int:8 paintjobslot;
        // offset 0x8, size 0x10
        uint:10 itemindex;
        // offset 0x18, size 0x38
        int:6 attachment[7];
        // offset 0x50, size 0x8
        uint:6 reticleindex;
        // offset 0x58, size 0x8
        uint:6 camoindex;
    };

    // idx 19 members 8 size 0x128
    struct hash_27580df06d232ed1 {
        // offset 0x0, size 0x8
        uint:5 tacticalgear;
        // offset 0x8, size 0x10
        uint:10 primarygrenade;
        // offset 0x18, size 0x18
        uint:5 bonuscard[3];
        // offset 0x30, size 0x30
        uint:5 talent[6];
        // offset 0x60, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xc0, size 0x60
        hash_2c79abcce61676aa primary;
        // offset 0x120, size 0x1
        bool primarygrenadecount;
        // offset 0x121, size 0x7
        uint:1 __pad[7];
    };

    // idx 20 members 4 size 0xe0
    struct hash_1489c97943984433 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x10
        uint:10 herogadget;
        // offset 0x20, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0x80, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 21 members 6 size 0x118
    struct hash_639e593cf0112829 {
        // offset 0x0, size 0x10
        uint:10 primarygrenade;
        // offset 0x10, size 0x8
        uint:6 talisman1;
        // offset 0x18, size 0x30
        uint:5 specialty[6];
        // offset 0x48, size 0x10
        uint:10 herogadget;
        // offset 0x58, size 0x60
        hash_20631b664715b1fa secondary;
        // offset 0xb8, size 0x60
        hash_2c79abcce61676aa primary;
    };

    // idx 22 members 2 size 0xd8
    struct hash_5fdbf0fb5462cc71 {
        // offset 0x0, size 0x88
        string(17) packname;
        // offset 0x88, size 0x50
        uint:10 bubblegumbuff[5];
    };

    // idx 23 members 14 size 0x1bd00
    struct cacloadoutlistzm_s {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0x8
        int:5 equippedbubblegumpack;
        // offset 0x18, size 0x4010
        variant variant[50];
        // offset 0x4028, size 0xa78
        charactercontext charactercontext;
        // offset 0x4aa0, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x4ac0, size 0x159d0
        character characters[11];
        // offset 0x1a490, size 0x870
        hash_5fdbf0fb5462cc71 bubblegumpack[10];
        // offset 0x1ad00, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x1ad08, size 0xaf0
        hash_639e593cf0112829 customclass[10];
        // offset 0x1b7f8, size 0x500
        string(16) customclassname[10];
        // offset 0x1bcf8, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1bcf9, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x1bcfa, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x1bcfb, size 0x5
        uint:1 __pad[5];
    };

    // idx 24 members 15 size 0x21c78
    struct hash_71e57d488b0eb24d {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0xa78
        charactercontext charactercontext;
        // offset 0xa88, size 0x20
        uint firstselectedcharacterindex;
        // offset 0xaa8, size 0x1f700
        character characters[16];
        // offset 0x201a8, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x201b0, size 0x1280
        hash_27580df06d232ed1 customclass[16];
        // offset 0x21430, size 0x800
        string(16) customclassname[16];
        // offset 0x21c30, size 0x10
        uint:10 killstreak1;
        // offset 0x21c40, size 0x10
        uint:10 killstreak2;
        // offset 0x21c50, size 0x10
        uint:10 killstreak3;
        // offset 0x21c60, size 0x10
        uint:10 killstreak4;
        // offset 0x21c70, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x21c71, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x21c72, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x21c73, size 0x5
        uint:1 __pad[5];
    };

    // idx 25 members 11 size 0x217b8
    struct hash_31d8d99be94a78b7 {
        // offset 0x0, size 0x10
        uint:10 loadoutversion;
        // offset 0x10, size 0xa78
        charactercontext charactercontext;
        // offset 0xa88, size 0x20
        uint firstselectedcharacterindex;
        // offset 0xaa8, size 0x1f700
        character characters[16];
        // offset 0x201a8, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x201b0, size 0xe00
        hash_1489c97943984433 customclass[16];
        // offset 0x20fb0, size 0x800
        string(16) customclassname[16];
        // offset 0x217b0, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x217b1, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x217b2, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x217b3, size 0x5
        uint:1 __pad[5];
    };

    // idx 26 members 18 size 0x1110
    struct cacloadoutlistcustomgames_s {
        // offset 0x0, size 0x8
        byte loadoutversion;
        // offset 0x8, size 0x8
        int:4 equippedbubblegumpack;
        // offset 0x10, size 0x20
        uint firstselectedcharacterindex;
        // offset 0x30, size 0x8
        uint:2 firstselectedloadouttype;
        // offset 0x38, size 0xb90
        hash_27580df06d232ed1 customclass[10];
        // offset 0xbc8, size 0x8
        byte herogadget;
        // offset 0xbd0, size 0x500
        string(16) customclassname[10];
        // offset 0x10d0, size 0x8
        byte heroweapon;
        // offset 0x10d8, size 0x8
        byte killstreak1;
        // offset 0x10e0, size 0x8
        byte killstreak2;
        // offset 0x10e8, size 0x8
        byte killstreak3;
        // offset 0x10f0, size 0x8
        byte killstreak4;
        // offset 0x10f8, size 0x8
        byte killstreak5;
        // offset 0x1100, size 0x8
        byte killstreak6;
        // offset 0x1108, size 0x1
        bool hash_6daffc8ba44646eb;
        // offset 0x1109, size 0x1
        bool hash_4a7be35adcdd0183;
        // offset 0x110a, size 0x1
        bool hash_490318f2d43cdc68;
        // offset 0x110b, size 0x5
        uint:1 __pad[5];
    };

    // idx 27 members 1 size 0x3c0
    struct hash_5fba00041f77a729 {
        // offset 0x0, size 0x3c0
        uint:2 weaponindex[120];
    };

    // idx 28 members 265 size 0xe7a8
    struct hash_2565a0443b27b26c {
        // offset 0x0, size 0x8
        fixed<8,2> timelimit;
        // offset 0x8, size 0x8
        uint:4 playerkillsmax;
        // offset 0x10, size 0x8
        uint:5 teamscoreperdeath;
        // offset 0x18, size 0x8
        uint:2 forceradar;
        // offset 0x20, size 0x8
        uint:5 teamscoreperkill;
        // offset 0x28, size 0x8
        fixed<8,2> playersprinttime;
        // offset 0x30, size 0x10
        fixed<10,2> capturetime;
        // offset 0x40, size 0x8
        uint:5 gameadvertisementruleroundswon;
        // offset 0x48, size 0x8
        uint:8 maxplayerdefensive;
        // offset 0x50, size 0x20
        int deployablebarrierdestroytime;
        // offset 0x70, size 0x8
        uint:5 pointsperweaponkill;
        // offset 0x78, size 0x10
        fixed<10,2> hash_1ca4d65346568642;
        // offset 0x88, size 0x8
        uint:4 draftrequiredclients;
        // offset 0x90, size 0x8
        uint:2 friendlyfiretype;
        // offset 0x98, size 0x8
        uint:7 hash_16184f2fd4014b39;
        // offset 0xa0, size 0x8
        uint:5 pointspermeleekill;
        // offset 0xa8, size 0x8
        uint:6 preroundperiod;
        // offset 0xb0, size 0x8
        fixed<8,6> scoreheropowertimefactor;
        // offset 0xb8, size 0x8
        uint:5 hash_62a4fd40810cb61;
        // offset 0xc0, size 0x8
        uint:4 teamkillpunishcount;
        // offset 0xc8, size 0x8
        uint:4 maxplayers;
        // offset 0xd0, size 0x20
        int forwardspawnhealth;
        // offset 0xf0, size 0x8
        uint:6 spawnteamkilledpenalty;
        // offset 0xf8, size 0x8
        uint:3 ballcount;
        // offset 0x100, size 0x10
        uint:10 hash_3c82ffb472a21cac;
        // offset 0x110, size 0x8
        uint:3 gunselection;
        // offset 0x118, size 0x800
        uint:2 restricteditems[256];
        // offset 0x918, size 0x8
        uint:5 prematchrequirement;
        // offset 0x920, size 0x8
        uint:3 spectatetype;
        // offset 0x928, size 0x8
        uint:2 randomobjectivelocations;
        // offset 0x930, size 0x8
        uint:5 roundwinlimit;
        // offset 0x938, size 0x10
        uint:10 antiboostdistance;
        // offset 0x948, size 0x10
        uint:15 roundscorelimit;
        // offset 0x958, size 0x8
        fixed<8,4> bulletdamagescalar;
        // offset 0x960, size 0x8
        uint:7 ticketslostontimeamount;
        // offset 0x968, size 0x8
        fixed<8,2> defusetime;
        // offset 0x970, size 0x8
        fixed<8,4> teamkillreducedpenalty;
        // offset 0x978, size 0x8
        uint:5 maxallocation;
        // offset 0x980, size 0x8
        uint:4 carryscore;
        // offset 0x988, size 0x8
        uint:4 hash_6e49ce7bbe6d3f1f;
        // offset 0x990, size 0x8
        fixed<8,2> killeventscoremultiplier;
        // offset 0x998, size 0x8
        uint:6 ticketslostontimeinterval;
        // offset 0x9a0, size 0xa500
        hash_5fba00041f77a729 restrictedattachments[44];
        // offset 0xaea0, size 0x8
        fixed<8,2> roundstartexplosivedelay;
        // offset 0xaea8, size 0x8
        uint:2 cleandepositrotation;
        // offset 0xaeb0, size 0x8
        uint:7 idleflagresettime;
        // offset 0xaeb8, size 0x8
        fixed<8,6> scoreheropowergainfactor;
        // offset 0xaec0, size 0x8
        uint:4 setbacks;
        // offset 0xaec8, size 0x20
        int hash_6b808ab4016cb1e1;
        // offset 0xaee8, size 0x10
        uint:10 hash_70e1efac5fcdfa4f;
        // offset 0xaef8, size 0x10
        uint:10 hash_70e1eeac5fcdf89c;
        // offset 0xaf08, size 0x10
        uint:10 hash_70e1f1ac5fcdfdb5;
        // offset 0xaf18, size 0x10
        uint:10 hash_70e1f0ac5fcdfc02;
        // offset 0xaf28, size 0x10
        uint:10 hash_70e1ebac5fcdf383;
        // offset 0xaf38, size 0x10
        fixed<12,4> trm_maxheight;
        // offset 0xaf48, size 0x8
        uint:7 hash_2b88c6ac064e9c59;
        // offset 0xaf50, size 0x8
        uint:4 maxplayofthematchevents;
        // offset 0xaf58, size 0x10
        uint:15 scorelimit;
        // offset 0xaf68, size 0x8
        fixed<8,2> cratecapturetime;
        // offset 0xaf70, size 0x8
        uint:5 hash_4a6ef8940f4cbb83;
        // offset 0xaf78, size 0x8
        uint:3 killpointsinenemyprotectedzone;
        // offset 0xaf80, size 0x8
        uint:5 hash_6e2b8452b08a545c;
        // offset 0xaf88, size 0x10
        uint:10 playermaxhealth;
        // offset 0xaf98, size 0x8
        uint:7 hash_1833c853bfe78ffc;
        // offset 0xafa0, size 0x8
        uint:5 hash_66a7d866327081eb;
        // offset 0xafa8, size 0x8
        uint:5 pointsforsurvivalbonus;
        // offset 0xafb0, size 0x80
        uint:5 maxuniquerolesperteam[16];
        // offset 0xb030, size 0x8
        uint:3 objectivepingtime;
        // offset 0xb038, size 0x8
        uint:5 teamkillspawndelay;
        // offset 0xb040, size 0x8
        uint:8 carrierarmor;
        // offset 0xb048, size 0x8
        uint:7 ticketslostondeath;
        // offset 0xb050, size 0x8
        uint:2 hash_47d4aa0161d78e15;
        // offset 0xb058, size 0x10
        uint:9 carriermovespeed;
        // offset 0xb068, size 0x8
        uint:5 boottime;
        // offset 0xb070, size 0x8
        fixed<8,2> hash_314c2f7312bde4af;
        // offset 0xb078, size 0x8
        uint:7 hash_49f4e3b6cf493d7e;
        // offset 0xb080, size 0x8
        uint:7 teamnumlives;
        // offset 0xb088, size 0x8
        fixed<8,2> planttime;
        // offset 0xb090, size 0x8
        uint:6 spawnprotectiontime;
        // offset 0xb098, size 0x10
        uint:10 inactivitykick;
        // offset 0xb0a8, size 0x8
        uint:5 pointspersecondarykill;
        // offset 0xb0b0, size 0x8
        fixed<8,2> playerhealthregentime;
        // offset 0xb0b8, size 0x10
        uint:10 hash_12ce5d40d1f9fb7f;
        // offset 0xb0c8, size 0x10
        uint:10 hash_12ce5c40d1f9f9cc;
        // offset 0xb0d8, size 0x10
        uint:10 hash_12ce5f40d1f9fee5;
        // offset 0xb0e8, size 0x10
        uint:10 hash_12ce5e40d1f9fd32;
        // offset 0xb0f8, size 0x10
        uint:10 hash_12ce5940d1f9f4b3;
        // offset 0xb108, size 0x10
        fixed<10,2> destroytime;
        // offset 0xb118, size 0x8
        uint:7 flagrespawntime;
        // offset 0xb120, size 0x8
        uint:2 shutdowndamage;
        // offset 0xb128, size 0x8
        fixed<8,2> gameadvertisementruletimeleft;
        // offset 0xb130, size 0x8
        uint:8 hash_6a48bbfb703d5c9c;
        // offset 0xb138, size 0x8
        uint:4 hash_239b391c77ebf8c1;
        // offset 0xb140, size 0x10
        uint:11 objectivehealth;
        // offset 0xb150, size 0x8
        uint:6 spawnsuicidepenalty;
        // offset 0xb158, size 0x8
        uint:2 robotspeed;
        // offset 0xb160, size 0x8
        uint:3 hash_467be34402dad274;
        // offset 0xb168, size 0x8
        uint:7 servermsec;
        // offset 0xb170, size 0x8
        uint:4 hash_552338718ec6d2df;
        // offset 0xb178, size 0x10
        fixed<9,3> maxplayereventsperminute;
        // offset 0xb188, size 0x10
        uint:10 leaderbonus;
        // offset 0xb198, size 0x8
        uint:2 enemycarriervisible;
        // offset 0xb1a0, size 0x10
        uint:9 autodestroytime;
        // offset 0xb1b0, size 0x8
        uint:5 teamscoreperkillconfirmed;
        // offset 0xb1b8, size 0x8
        uint:5 hash_4e4352bd1aaeedfe;
        // offset 0xb1c0, size 0x8
        fixed<8,2> waverespawndelay;
        // offset 0xb1c8, size 0x8
        uint:5 startround;
        // offset 0xb1d0, size 0x8
        uint:5 hash_567db38226658dbf;
        // offset 0xb1d8, size 0x8
        uint:6 prematchperiod;
        // offset 0xb1e0, size 0x8
        uint:6 teamkillscore;
        // offset 0xb1e8, size 0x8
        uint:5 hash_102aeddad113f70c;
        // offset 0xb1f0, size 0x8
        uint:4 hash_4635a26c94b56725;
        // offset 0xb1f8, size 0x20
        int deployablebarrierhealth;
        // offset 0xb218, size 0x8
        uint:5 pointsperprimarykill;
        // offset 0xb220, size 0x8
        uint:5 teamscoreperheadshot;
        // offset 0xb228, size 0x8
        uint:7 hash_1908ad844e6c3e37;
        // offset 0xb230, size 0x8
        uint:4 pregameitemmaxvotes;
        // offset 0xb238, size 0x8
        uint:7 playernumlives;
        // offset 0xb240, size 0x8
        uint:2 infectionmode;
        // offset 0xb248, size 0x8
        uint:5 gameadvertisementruleround;
        // offset 0xb250, size 0x8
        fixed<7,1> incrementalspawndelay;
        // offset 0xb258, size 0x8
        uint:5 maxsuicidesbeforekick;
        // offset 0xb260, size 0x8
        uint:7 gameadvertisementrulescorepercent;
        // offset 0xb268, size 0x8
        fixed<8,6> hash_47e9736d437be7c8;
        // offset 0xb270, size 0x8
        uint:6 reboottime;
        // offset 0xb278, size 0x8
        uint:5 teamscorepercleandeposit;
        // offset 0xb280, size 0x8
        uint:8 hash_2849b6cf7317ab1b;
        // offset 0xb288, size 0x8
        uint:4 pickuptime;
        // offset 0xb290, size 0x20
        int hash_64727525f5957d06;
        // offset 0xb2b0, size 0x20
        int hash_1f3285ddee84620c;
        // offset 0xb2d0, size 0x8
        uint:5 hash_3767386c050fa0eb;
        // offset 0xb2d8, size 0x8
        fixed<8,2> playerrespawndelay;
        // offset 0xb2e0, size 0x8
        fixed<8,2> spawntraptriggertime;
        // offset 0xb2e8, size 0x8
        uint:8 maxplayeroffensive;
        // offset 0xb2f0, size 0x8
        uint:2 allowhitmarkers;
        // offset 0xb2f8, size 0x10
        fixed<9,3> maxobjectiveeventsperminute;
        // offset 0xb308, size 0x8
        uint:5 pointsperprimarygrenadekill;
        // offset 0xb310, size 0x8
        uint:7 bonuslivesforcapturingzone;
        // offset 0xb318, size 0x8
        uint:3 hash_7d590533364efa87;
        // offset 0xb320, size 0x8
        uint:8 hash_252e760b41f3d94a;
        // offset 0xb328, size 0x8
        fixed<8,2> roundstartkillstreakdelay;
        // offset 0xb330, size 0x8
        uint:5 totalkillsmax;
        // offset 0xb338, size 0x8
        uint:4 roundswitch;
        // offset 0xb340, size 0x8
        fixed<8,2> playerobjectiveheldrespawndelay;
        // offset 0xb348, size 0x8
        uint:4 teamkillpenalty;
        // offset 0xb350, size 0x8
        fixed<8,2> hash_18bdaa4b00863e9d;
        // offset 0xb358, size 0x8
        uint:5 weaponcount;
        // offset 0xb360, size 0x8
        uint:7 weapontimer;
        // offset 0xb368, size 0x10
        fixed<10,2> overtimetimelimit;
        // offset 0xb378, size 0x8
        uint:7 cleandepositonlinetime;
        // offset 0xb380, size 0x3330
        cacloadoutlistcustomgames_s cacloadouts[3];
        // offset 0xe6b0, size 0x8
        uint:7 drafttime;
        // offset 0xe6b8, size 0x8
        uint:8 hash_ed89addfaaafe48;
        // offset 0xe6c0, size 0x8
        uint:7 objectivespawntime;
        // offset 0xe6c8, size 0x8
        uint:4 throwscore;
        // offset 0xe6d0, size 0x8
        uint:4 deposittime;
        // offset 0xe6d8, size 0x10
        fixed<10,2> extratime;
        // offset 0xe6e8, size 0x8
        uint:4 teamcount;
        // offset 0xe6f0, size 0x20
        int hash_7f38d88521da4c79;
        // offset 0xe710, size 0x8
        uint:4 roundlimit;
        // offset 0xe718, size 0x8
        uint:2 charactercustomization;
        // offset 0xe720, size 0x8
        uint:4 hash_437a986f8d24d7eb;
        // offset 0xe728, size 0x8
        uint:5 teamscoreperkilldenied;
        // offset 0xe730, size 0x10
        fixed<10,2> bombtimer;
        // offset 0xe740, size 0x1
        bool delayplayer;
        // offset 0xe741, size 0x1
        bool voipdeadchatwithdead;
        // offset 0xe742, size 0x1
        bool voipdeadchatwithteam;
        // offset 0xe743, size 0x1
        bool magic;
        // offset 0xe744, size 0x1
        bool useembleminsteadoffactionicon;
        // offset 0xe745, size 0x1
        bool draftenabled;
        // offset 0xe746, size 0x1
        bool droppedtagrespawn;
        // offset 0xe747, size 0x1
        bool voipkillershearvictim;
        // offset 0xe748, size 0x1
        bool hash_7c0dcff6ffb1e348;
        // offset 0xe749, size 0x1
        bool allowdogs;
        // offset 0xe74a, size 0x1
        bool presetclassesperteam;
        // offset 0xe74b, size 0x1
        bool hash_5c57222bb95a06cb;
        // offset 0xe74c, size 0x1
        bool hardcoremode;
        // offset 0xe74d, size 0x1
        bool hash_495b64bd935bf7b;
        // offset 0xe74e, size 0x1
        bool silentplant;
        // offset 0xe74f, size 0x1
        bool hash_5711f3e42924a635;
        // offset 0xe750, size 0x1
        bool drafteveryround;
        // offset 0xe751, size 0x1
        bool timepauseswheninzone;
        // offset 0xe752, size 0x1
        bool hash_549abfbb3665d526;
        // offset 0xe753, size 0x1
        bool scoreperplayer;
        // offset 0xe754, size 0x1
        bool kothmode;
        // offset 0xe755, size 0x1
        bool hash_62665aebde32c8ae;
        // offset 0xe756, size 0x1
        bool hash_18c053cae82c1167;
        // offset 0xe757, size 0x1
        bool decayprogress;
        // offset 0xe758, size 0x1
        bool playerqueuedrespawn;
        // offset 0xe759, size 0x1
        bool cumulativeroundscores;
        // offset 0xe75a, size 0x1
        bool voipdeadhearkiller;
        // offset 0xe75b, size 0x1
        bool usespawngroups;
        // offset 0xe75c, size 0x1
        bool disablethirdpersonspectating;
        // offset 0xe75d, size 0x1
        bool allowbattlechatter;
        // offset 0xe75e, size 0x1
        bool fowrevealenabled;
        // offset 0xe75f, size 0x1
        bool hash_678c1d3307b1d73a;
        // offset 0xe760, size 0x1
        bool headshotsonly;
        // offset 0xe761, size 0x1
        bool disablecontracts;
        // offset 0xe762, size 0x1
        bool hash_75d44b1542e3edf9;
        // offset 0xe763, size 0x1
        bool allowannouncer;
        // offset 0xe764, size 0x1
        bool disallowaimslowdown;
        // offset 0xe765, size 0x1
        bool vehiclesenabled;
        // offset 0xe766, size 0x1
        bool decaycapturedzones;
        // offset 0xe767, size 0x1
        bool neutralzone;
        // offset 0xe768, size 0x1
        bool onlyheadshots;
        // offset 0xe769, size 0x1
        bool flagcapturecondition;
        // offset 0xe76a, size 0x1
        bool flagcanbeneutralized;
        // offset 0xe76b, size 0x1
        bool hash_6881c7cab0dcef39;
        // offset 0xe76c, size 0x1
        bool vehiclestimed;
        // offset 0xe76d, size 0x1
        bool pregamedraftenabled;
        // offset 0xe76e, size 0x1
        bool fogofwarminimap;
        // offset 0xe76f, size 0x1
        bool teamkillpointloss;
        // offset 0xe770, size 0x1
        bool hash_29f3630e8e542a0a;
        // offset 0xe771, size 0x1
        bool perksenabled;
        // offset 0xe772, size 0x1
        bool allowmapscripting;
        // offset 0xe773, size 0x1
        bool robotshield;
        // offset 0xe774, size 0x1
        bool hash_62e3e33ec68db92f;
        // offset 0xe775, size 0x1
        bool allowkillcam;
        // offset 0xe776, size 0x1
        bool disableattachments;
        // offset 0xe777, size 0x1
        bool disablecompass;
        // offset 0xe778, size 0x1
        bool disableweapondrop;
        // offset 0xe779, size 0x1
        bool escalationenabled;
        // offset 0xe77a, size 0x1
        bool disablecac;
        // offset 0xe77b, size 0x1
        bool disableclassselection;
        // offset 0xe77c, size 0x1
        bool autoteambalance;
        // offset 0xe77d, size 0x1
        bool hash_7c0acf14fb1f4080;
        // offset 0xe77e, size 0x1
        bool allowplayofthematch;
        // offset 0xe77f, size 0x1
        bool allowprone;
        // offset 0xe780, size 0x1
        bool scoreresetondeath;
        // offset 0xe781, size 0x1
        bool hash_452a45e599d3a575;
        // offset 0xe782, size 0x1
        bool playerforcerespawn;
        // offset 0xe783, size 0x1
        bool multibomb;
        // offset 0xe784, size 0x1
        bool deathcircle;
        // offset 0xe785, size 0x1
        bool hash_72a2919d2ac65850;
        // offset 0xe786, size 0x1
        bool deathpointloss;
        // offset 0xe787, size 0x1
        bool hash_1260b639348098e3;
        // offset 0xe788, size 0x1
        bool rebootplayers;
        // offset 0xe789, size 0x1
        bool oldschoolmode;
        // offset 0xe78a, size 0x1
        bool hash_4238acad9fa0f317;
        // offset 0xe78b, size 0x1
        bool allowfinalkillcam;
        // offset 0xe78c, size 0x1
        bool allowspectating;
        // offset 0xe78d, size 0x1
        bool spawnselectenabled;
        // offset 0xe78e, size 0x1
        bool loadoutkillstreaksenabled;
        // offset 0xe78f, size 0x1
        bool pregameitemvoteenabled;
        // offset 0xe790, size 0x1
        bool hash_5684ea266d45be15;
        // offset 0xe791, size 0x1
        bool hash_7f273e367f26254;
        // offset 0xe792, size 0x1
        bool disallowprone;
        // offset 0xe793, size 0x1
        bool moveplayers;
        // offset 0xe794, size 0x1
        bool disabletacinsert;
        // offset 0xe795, size 0x1
        bool voipdeadhearallliving;
        // offset 0xe796, size 0x1
        bool killstreaksgivegamescore;
        // offset 0xe797, size 0x1
        bool flagcapturerateincrease;
        // offset 0xe798, size 0x1
        bool zmdifficulty;
        // offset 0xe799, size 0x1
        bool pvponly;
        // offset 0xe79a, size 0x1
        bool forwardspawnteamspecificspawns;
        // offset 0xe79b, size 0x1
        bool hash_50b56d2635cbb74b;
        // offset 0xe79c, size 0x1
        bool forwardspawntakesdamage;
        // offset 0xe79d, size 0x1
        bool allowingameteamchange;
        // offset 0xe79e, size 0x1
        bool hash_297b69789a6283b4;
        // offset 0xe79f, size 0x1
        bool classicmode;
        // offset 0xe7a0, size 0x1
        bool voipdeadhearteamliving;
        // offset 0xe7a1, size 0x1
        bool capdecay;
        // offset 0xe7a2, size 0x1
        bool voipeveryonehearseveryone;
        // offset 0xe7a3, size 0x1
        bool hash_4f4a73f236278ba8;
        // offset 0xe7a4, size 0x4
        uint:1 __pad[4];
    };

    // idx 29 members 9 size 0xea90
    struct hash_5d6e6de9167f1a56 {
        // offset 0x0, size 0x200
        string(64) gamedescription;
        // offset 0x200, size 0x20
        uint createtime;
        // offset 0x220, size 0x80
        string(16) gamename;
        // offset 0x2a0, size 0x40
        string(8) gametype;
        // offset 0x2e0, size 0xe7a8
        hash_2565a0443b27b26c gametypesettings;
        // offset 0xea88, size 0x1
        bool inuse;
        // offset 0xea89, size 0x1
        bool downloaded;
        // offset 0xea8a, size 0x1
        bool isofficial;
        // offset 0xea8b, size 0x5
        uint:1 __pad[5];
    };

    // idx 0 members 2
    enum hash_1d2ac7bb711046eb {
        left, // 0x0,
        top, // 0x1
    };

    // idx 1 members 4
    enum hash_5446546f71ee6cdf {
        hash_2e29a4cc7409d939, // 0x0,
        helmet, // 0x1,
        body, // 0x2,
        hash_7d030d1323187739, // 0x3
    };

    // idx 2 members 2
    enum hash_7f3085f3cff25119 {
        female, // 0x0,
        male, // 0x1
    };

    // idx 0 members 2 size 0x57f80
    // offset 0x0, size 0x20
    int loadoutversion;
    // offset 0x20, size 0x57f60
    hash_5d6e6de9167f1a56 customgames[6];
}

